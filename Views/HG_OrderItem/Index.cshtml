@{ Layout = null;}
@using HangOut.Models;
@using HangOut.Models.DynamicList;
@{ 
    string OID = Request.QueryString["OID"];
    Int64 OrderId = Int64.Parse(OID);
    HG_Orders order = new HG_Orders().GetOne(OrderId);
    List<HG_Items> listItem = new HG_Items().GetAll();
    //   List<vw_HG_UsersDetails> UserList = new vw_HG_UsersDetails().GetAll();
    // UserList.AddRange(new vw_HG_UsersDetails().GetAll("CUST"));
    List<HG_UserTypes> UsertypleList = new HG_UserTypes().GetAll();
    List<HG_OrderItem> listorder = new HG_OrderItem().GetAll(OrderId);
    var tokens = listorder.Select(x => x.TickedNo);
    tokens = tokens.Distinct();
    var Ticketnos = string.Join(",", tokens);
}
<style>
.showDetails {
        border-collapse: collapse;
    width: 100%;
    }

        .showDetails td, .showDetails th {
    border: 1px solid #ddd;
            padding: 8px;
        text-align: center;
    }

    .showDetails tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    .showDetails tr:hover {
        background-color: #ddd;
    }

    .showDetails th {
        padding-top: 8px;
        padding-bottom: 5px;
        background-color: #4CAF50;
        color: white;
    }
</style>
<div class="card">
    <div style="padding:20px">
        <h5>Order Date: @order.Create_Date.ToString("ddd-MMM-dd hh:mm")</h5>
        <h5>Order No:  @order.OID</h5>
        <h5>Ticket No: @Ticketnos</h5>
        <h5>Payment Mode: @OrgType.PaymentMode(order.PaymentStatus)</h5>
    </div>
    <div class="card-header">
        <h3>Details :</h3>
    </div>
    <div class="card-body">
        <table class="table showDetails" id="OrdItmTbl">
            <thead>
                <tr>
                    <th>
                        S.N
                    </th>
                    <th>
                        @Html.DisplayName("Item")
                    </th>
                    <th>
                        @Html.DisplayName("Qty")
                    </th>
                    <th>
                        @Html.DisplayName("AMT")
                    </th>
                    <th>
                        @Html.DisplayName("Status")
                    </th>
                    <th>
                        @Html.DisplayName("Placed By")
                    </th>
                    <th>
                        @Html.DisplayName("Prepare By")
                    </th>
                </tr>
            </thead>
            <tbody>
                @{
                    int sno = 0;
                    var QtyTotal = 0;
                    var AmtTotal = 0.00;
                }
                @foreach (var item in listorder)
                {
                    <!-- //"1":Order Placed,"2":Processing,3:"Completed" ,"4" :"Cancelled"-->
                    double ItemPrice = item.Price * item.Count;
                    QtyTotal += item.Count;
                    AmtTotal += ItemPrice;
                    string PrePareBy = "";
                    string OrderPlacedBy = "";
                    var PlacedByObj = new vw_HG_UsersDetails().GetSingleByUserId((int)item.OrdById);
                    var PrepareByObj=new vw_HG_UsersDetails().GetSingleByUserId(item.ChefSeenBy);
                    if (PlacedByObj.UserCode > 0)
                    {
                        OrderPlacedBy = UsertypleList.Find(x => x.UserType == PlacedByObj.UserType).UserTypeName + " (" + PlacedByObj.UserName + " )";
                    }
                    if (PrepareByObj.UserCode > 0)
                    {
                        PrePareBy= UsertypleList.Find(x => x.UserType == PrepareByObj.UserType).UserTypeName + " (" + PrepareByObj.UserId + " )";
                    }
                    string status = "";
                    string backTrColr = "";

                    if (item.Status == 1)
                    {
                        status = "Placed";
                        backTrColr = "background-color:whilte";
                    }
                    else if (item.Status == 2)
                    {
                        status = "Processing";
                        backTrColr = "background-color:yellow";
                    }
                    else if (item.Status == 3)
                    {
                        status = "Completed";
                        backTrColr = "background-color:green";
                    }
                    else
                    {
                        backTrColr = "background-color:red";
                        status = "Cancel";
                    }
                <tr style="@(backTrColr)">
                    <td>
                        @{ sno++; }
                        @sno
                    </td>
                    <td>
                        @{HG_Items ObjOrder = listItem.Find(x => x.ItemID == item.FID); }
                        @ObjOrder.Items
                    </td>
                    <td>
                        @item.Count
                    </td>
                    <td>
                       @ItemPrice.ToString("0.00")
                    </td>
                    <td>
                        @status
                    </td>
                    <td>@OrderPlacedBy</td>
                    <td>@PrePareBy</td>
                </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td>Total</td>
                    <td></td>
                    <td>@QtyTotal</td>
                    <td>@AmtTotal.ToString("0.00")</td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>

            </tfoot>
        </table>
    </div>
</div>
<script>

    setTimeout(function () { LoadDataTable('OrdItmTbl'); }, 500);
</script>