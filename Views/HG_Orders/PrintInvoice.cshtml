@using HangOut.Models;
@using HangOut.Models.DynamicList;
@{ Layout = null;}
@{
    double delivercharges = 0.00;
    int OrgId = int.Parse(Request.Cookies["UserInfo"]["OrgId"]);
    string PaymentMode = "";
    Int64 OID = Int64.Parse(Request.QueryString["OID"]);
    List<HG_Orders> orderlist = new List<HG_Orders>();
    List<HG_OrderItem> OrderItems = new List<HG_OrderItem>();
    DateTime OrderDate = DateTime.Now;
    if (Request.QueryString["TorSid"] != null)
    {
        Int64 TorSid = Int64.Parse(Request.QueryString["TorSid"]);
        // int OldOtp = int.Parse(Request.QueryString["OldOtp"]);
        orderlist = new HG_Orders().GetListByGetDate(DateTime.Now, DateTime.Now);
        orderlist = orderlist.FindAll(x => x.Table_or_SheatId == TorSid && x.PaymentStatus != 0);
        var orderObj = orderlist.First();
        orderlist = orderlist.FindAll(X => X.OID == orderObj.OID);
        OrderItems.AddRange(new HG_OrderItem().GetAll(orderObj.OID));
        OID = orderObj.OID;
        PaymentMode = OrgType.PaymentMode(orderObj.PaymentStatus);
        delivercharges = orderObj.DeliveryCharge;
    }
    else
    {

        HG_Orders order = new HG_Orders().GetOne(OID);
        orderlist.Add(order);
        PaymentMode = OrgType.PaymentMode(order.PaymentStatus);
        OrderItems.AddRange(new HG_OrderItem().GetAll(order.OID));
        OrderDate = order.Create_Date;
        delivercharges = order.DeliveryCharge;
    }
    // OrderItems = OrderItems.FindAll(x => x.Status != 4); //not cancedled items
    HG_OrganizationDetails OrgObj = new HG_OrganizationDetails().GetOne(OrgId);
    string InvoiceHeading = "Test-1";
    string OrgName = "OrgName";
    string AddressLine1 = "";
    string AddressLine2 = "";
    string AddressLine3 = "";
    string Phoneno = "";
    string GstNo = "";
    string Licence2 = "";
    string Licence3 = "";
    //  HashSet<string> OrdesHash = new HashSet<string>(orderlist.Select(x => x.OID.ToString()).ToArray());
    string OrderNo = OID.ToString();
    double AmountTotal = 0.00;
    int Qty = 0;
    double TotalTax = 0.00;
    double GrandTotal = 0.00;

    string PoweredBy = "Powered By FoodDo";
    string TicketNos = "";
    string Printremark =" ...........................................................";
    List <HG_Items> ItemList = new HG_Items().GetAll();
    HashSet<string> hashTicket = new HashSet<string>(OrderItems.Select(x => x.TickedNo.ToString()).ToArray());
    TicketNos = string.Join(",", hashTicket);
    if (OrgObj.OrgID > 0)
    {
        InvoiceHeading = OrgObj.IvoiceHeading;
        OrgName = OrgObj.InvoiceTitle;
        AddressLine1 = OrgObj.Address;
        AddressLine2 = OrgObj.AddressLin2;
        AddressLine3 = OrgObj.AddressLine3;
        Phoneno = OrgObj.invoicePhone;
        GstNo = OrgObj.GSTNO;
        Licence2 = OrgObj.Licence2;
        Licence3 = OrgObj.License3;
        Printremark = (OrgObj.PrintRemark != null && OrgObj.PrintRemark != "") ? OrgObj.PrintRemark : Printremark;

    }
}
<style>
    @@media print {
        body * {
            visibility: hidden;
        }

        #section-to-print {
            width: 21cm;
            height: 29.7cm;
            margin: 0mm 0mm 0mm 0mm;
        }

            #section-to-print * {
                visibility: visible;
            }
    }


    tr, td, th {
        text-align: center;
    }
    .print:last-child {
        page-break-after: auto;
    }
</style>



<div class="row">
    <button id="A4Print" onclick="window.print();"> PRINT (A-4) </button>
    <button id="Thermal" onclick="PrintElem()"> PRINT(POS)</button>
</div>
<div style="border:2px solid black " id="section-to-print">
    <div id="PrintHeight" >
        <div>
            <h4 style="text-align:center">@InvoiceHeading</h4>
            <h3 style="text-align:center">@OrgName</h3>
            <p style="text-align:center">@AddressLine1</p>
            @if (AddressLine2 != null && AddressLine2.Replace(" ", "") != "")
            {
                <p style="text-align:center">@AddressLine2</p>
            }
            @if (AddressLine3 != null && AddressLine3.Replace(" ", "") != "")
            {
                <p style="text-align:center">@AddressLine3</p>
            }
            <p style="text-align:center">Phone  @Phoneno         @GstNo</p>
            @if (Licence2 != null && Licence2.Replace(" ", "") != "")
            {
                <p style="text-align:center">@Licence2  @Licence3</p>
            }
        </div>
        <div style="text-align:center">
            <p>Order No: @OrderNo Ticket No:@TicketNos</p>
            <p>Date:@OrderDate.ToString("dd/MM hh:mm tt") Mode :@PaymentMode</p>
        </div>
        <table id="InvoiceItems" style="width:100%" class="table col-sm-12">
            <thead>
                <tr>
                    <th style="text-align:center">Item </th>
                    <th style="text-align:center">Qty</th>
                    <th style="text-align:center">Rate</th>
                    <th style="text-align:center">Amt</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var items in OrderItems)
                {
                    double Amt = 0.00;
                    string Style = "background-color:#e05c5c";
                    if (items.Status != 4)
                    {
                        Amt = items.CostPrice * items.Count;
                        AmountTotal += Amt;
                        Qty += items.Count;
                        Style = "background-color:white";
                        GrandTotal+= items.Price * items.Count;
                        TotalTax += items.TaxInItm;
                    }
                    // Qty += items.Qty;
                    HG_Items hG_Items = ItemList.Find(x => x.ItemID == items.FID);
                <tr style="@(Style)">
                    <td style="text-align:center">@hG_Items.Items</td>
                    <td style="text-align:center">@items.Count</td>
                    <td style="text-align:center">@items.CostPrice.ToString("0.00")</td>
                    <td style="text-align:center">@Amt.ToString("0.00")</td>
                </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td style="text-align:center">Item Total</td>
                    <td style="text-align:center">@Qty.ToString() </td>
                    <td style="text-align:center"></td>
                    <td style="text-align:center">@AmountTotal.ToString()</td>
                </tr>
            </tfoot>
        </table>
        <div>
            <p>Note:</p>
            <div>
              @Printremark
            </div>
            <p style="page-break-after:auto">@PoweredBy</p>
        </div>
    </div>
    <div class="print"></div>
</div>

<script>
    function printstr(text1, col1, align) {

        if (align === null) {
            align = "center";
        }

        var text = text1.split(",");
        var col = col1.split(",");

        var arr = new Array();
        var i = 0;
        var rtrstr = "";
        for (i = 0; i < text.length; i++) {

            var t = text[i]; //item name
            var c = parseInt(col[i]); //length of column
            var textlenght = t.length;
            var totalspace = c - textlenght;
            var prefixspace = 0;
            var suffixspace = 0;
            switch (align) {
                case "center":
                    prefixspace = parseInt(totalspace / 2);
                    suffixspace = parseInt(totalspace / 2);
                    var remainingspace = totalspace - (prefixspace + suffixspace);
                    prefixspace = prefixspace + remainingspace;
                    break;
                case "left":
                    prefixspace = 0;
                    suffixspace = parseInt(totalspace);
                    break;
                case "right":
                    prefixspace = parseInt(totalspace);
                    suffixspace = 0;
                    break;
                default:
                    prefixspace = parseInt(totalspace / 2);
                    suffixspace = parseInt(totalspace / 2);
                    var remainingspace = totalspace - (prefixspace + suffixspace);
                    prefixspace = prefixspace + remainingspace;
                    break;
            }



            for (j = 0; j < prefixspace; j++) {

                rtrstr += " ";

            }

            rtrstr += t;
            for (j = 0; j < suffixspace; j++) {

                rtrstr += " ";


            }


        }

        return rtrstr + "\n";

    }
    function ConvertDateJA(d) {
        var date = d;
        var dd = date.getDate();
        var m = date.getMonth() + 1;
        var y = date.getFullYear();
        var h = date.getHours();
        var mm = date.getMinutes();
        var s = date.getSeconds();
        return (dd <= 9 ? '0' + dd : dd) + '/' + (m <= 9 ? '0' + m : m) + '/' + y;
        //return curr_year + "-"  + curr_month + "-" + curr_date;
    }
    function PrintToken() {
        zpl = "";
        zpl += printstr("<h1 style='padding:0px 0px 0px 0px !important;margin:0px;'>TOKEN -123456</h1>", "34", "center");
        zpl += printstr("----------------------------------", "34");
        zpl += printstr("DATE: " + ConvertDateJA(new Date()), "34");
        zpl += printstr("TIME: " + new Date().toLocaleTimeString(), "34");
        zpl += printstr("----------------------------------", "34");
        zpl += printstr("BUILTY NO 1254864578354845785687697879807895675FGHFGHFGHFG", "34");
        zpl += printstr("----------------------------------", "34");
        zpl += printstr("TRUCK NO : 148815448668", "34");
        zpl += printstr("----------------------------------", "34");
        console.log("zpl==" + zpl);
        var printWindow = window.open();
        printWindow.document.open('text/plain');

        printWindow.document.write("<pre>" + zpl + "</pre>");
        printWindow.document.close();
        printWindow.focus();
        printWindow.print();
        printWindow.close();
    }
    function PrintElem() {
        var Section = $('#section-to-print').html();
        console.log("Section  " + Section);

        // PrintToken();
        Popup(Section);
    }

    function Popup(data) {



        // var myWindow = window.open('', 'Receipt', 'height=400,width=600');
        var myWindow = window.open('text/plain');
        //  myWindow.document.write('<html>');
        /*optional stylesheet*/ //myWindow.document.write('<link rel="stylesheet" href="main.css" type="text/css" />');
        myWindow.document.write('<style type="text/css"> *, html,body {margin:0;padding:0;}</style>');
        //   myWindow.document.write('<body>');
        myWindow.document.write(data);
        // myWindow.document.write('</body></html>');
        myWindow.document.close(); // necessary for IE >= 10
        myWindow.onload = function () { // necessary if the div contain images
            myWindow.focus(); // necessary for IE >= 10
            myWindow.print();
            myWindow.close();
        };
    }

</script>




