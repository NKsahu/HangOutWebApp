@model HangOut.Models.OrdDiscntChrge
@{
    Layout = null;
    string TitleType = "";
    if (Request.QueryString["Type"] == "1")
    {
        TitleType = "Discount";
    }
    else if (Request.QueryString["Type"] == "2")
    {
        TitleType = "Charge";
    }
}

<div class="card">
    <div class="card-header">
        <h4 style="text-align:center;color:#000000"><b>@TitleType</b></h4>
        <hr />
    </div>
    <div class="card-body">

        @using (Ajax.BeginForm("DiscntCharge", "HG_Orders", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "DynamicData", LoadingElementId = "waiting", OnSuccess = "OnSuccess" }))
        {
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(model => model.Type)
            @Html.HiddenFor(model => model.OID)
            @Html.HiddenFor(model=>model.SeatingId)
        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-md-12">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label  " })
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                @Html.Label("Rs/-")
                @Html.EditorFor(model => model.Amt, new { @class = "form-control autodouble" })
                @Html.ValidationMessageFor(model => model.Amt, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                @Html.Label("Tax %")
                @Html.EditorFor(model => model.Tax, new { @class = "form-control autodouble", })
                @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">

            </div>
            <div class="col-md-6">
                @Html.Label("Remark")
                @Html.EditorFor(model => model.Remark, new { @class = "form-control " })
                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">

            </div>
            <div class="col-md-1">
                @Html.Label("Cancel", new { @class = "text-white" })
                <input type="button" value="Save" class="btn btn-danger" />
            </div>
            <div class="col-md-1">
                @Html.Label("Submit", new { @class = "text-white" })
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
        }
    </div>
</div>


