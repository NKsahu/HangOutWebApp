@model HangOut.Models.HG_Category
@{
    Layout = null;
    var ObjOrg = Request.Cookies["UserInfo"];
}
@using HangOut.Models
<div class="card">
    <div class="card-header card-header-color">
        <h3 style="text-align:center;color:white">AddOn Category</h3>
    </div>
    <div class="card-body">

        @using (Ajax.BeginForm("CreateEditAddon", "HG_Category", new { ID = Model.CategoryID }, new AjaxOptions { HttpMethod = "POST", LoadingElementId = "waiting", }))
        {
            @Html.HiddenFor(model => model.CategoryID)
            @Html.HiddenFor(model => model.CategoryType)

            <div class="row">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })

                @if (ObjOrg["OrgId"] == "0" || ObjOrg["OrgId"] == null)
                {
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.OrgID, htmlAttributes: new { @class = "control-label  " })
                        @{

                            SelectList sl = new SelectList(new HG_OrganizationDetails().GetAll(), "OrgID ", "Name");
                        }

                        @Html.DropDownListFor(Model => Model.OrgID, sl, "Select Orgonization", new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.OrgID, "", new { @class = "text-danger" })

                    </div>
                }
                else
                {
                    @Html.HiddenFor(model => model.OrgID)
                }

                <div class="col-sm-4">
                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label  " })

                    @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })

                </div>

                <div class="col-sm-4">
                    <div class="checkbox2 container">
                        @Html.CheckBoxFor(model => model.Status, new { @class = "form-control" })
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label  " })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-5">

                </div>
                <div class="col-md-2 ">
                    @Html.Label("SAVE", new { @class = "text-white" })
                    <input type="submit" value="SAVE" class="form-control SaveBtn" />
                </div>
                <div class="col-md-5">

                </div>
            </div>
        }
    </div>
</div>

