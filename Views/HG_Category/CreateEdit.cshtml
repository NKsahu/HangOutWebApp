@model HangOut.Models.HG_Category
    @{ 
        Layout = null;
    }
@using HangOut.Models
<div class="card">
    <div class="card-header">
        <h3 style="text-align:center;color:#000000"><b>Category</b></h3>
        <hr />
    </div>
    <div class="card-body">

        @using (Ajax.BeginForm("CreateEdit", "HG_Category", new {ID = Model.CategoryID }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "DynamicData", LoadingElementId = "waiting", OnSuccess = "OnSuccess" }))
        {
                @Html.HiddenFor(model => model.CategoryID)
                <div class="row">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.OrgID, htmlAttributes: new { @class = "control-label  " })
                        @{

                            SelectList sl = new SelectList(new HG_OrganizationDetails().GetAll(), "OrgID ", "Name");
                        }

                        @Html.DropDownListFor(Model => Model.OrgID, sl, "Select Orgonization", new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.OrgID, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label  " })

                        @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label  " })

                        <div class="checkbox">
                            @Html.EditorFor(model => model.Status)
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-1">
                        @Html.Label("Save", new { @class = "text-white" })
                        <input type="submit" value="Save" class="btn btn-success" />

                    </div>
                </div>
            }
        </div>
</div>
 
