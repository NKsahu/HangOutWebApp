@model HangOut.Models.Common.District
@using HangOut.Models.Common
@{Layout = null;
    List<City> listcity = new List<City>();
}
<div class="card">
    <div class="card-header ">
        <h4 style="text-align:center;color:#000000"><b>ADD TALUKA/TEHSIL</b></h4>
        <hr />
    </div>
    <div class="card-body">

        @using (Ajax.BeginForm("CreateTehsil", "City", new AjaxOptions { HttpMethod = "POST", LoadingElementId = "waiting", OnSuccess = "" }))
        {
            @Html.AntiForgeryToken()
        <div class="row">
            @Html.HiddenFor(model => model.Id)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class=" col-sm-3">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.Label("State")
                @Html.DropDownListFor(model => model.StateId, new SelectList(new State().GetAll(), "StateId", "Name", Model.StateId), "Select State", new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.Label("District/City")
                @Html.DropDownListFor(model => model.CityId, new SelectList(listcity, "CityId", "Name", Model.CityId), new { @class = "form-control", val = Model.CityId, required = "required" })
                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-1">
                @Html.Label("Save", new { @class = "text-white" })
                <input type="submit" value="Save" class="btn btn-success" />
            </div>

        </div>
        }

    </div>
</div>
<script>
    $("#StateId").change(function () {
        GetDrowpDownCity2();
    });
    function GetDrowpDownCity2() {
        var StateId = $("#StateId").val();
        var CityValue = $("#CityId").attr("val");
        console.log("City Value  " + CityValue);
        $("#waiting").show();
        $.ajax({
            url: "/WebApi/CityListByStateId?StateId=" + StateId,
            type: "POST",
            success: function (data) {
                var JsonArray = JSON.parse(data);
                $("#CityId").html('');
                $("#CityId").val('0');
                $('<option>', { value: "0", text: "Select" }).html("Select").appendTo("#CityId");
                if (JsonArray.length > 0) {
                    $.each(JsonArray, function (i, Obj) {      // bind the dropdown list using json result              
                        $('<option>',
                            {
                                value: Obj.CityId,
                                text: Obj.Name

                            }).html(Obj.Name).appendTo("#CityId");
                    });
                    $("#CityId").val(CityValue);
                }
                $("#waiting").hide();
                //$("#City").val('1');
                if ($("#CityId").val() == undefined || $("#CityId").val() == null || $("#CityId").val() == "0" || CityValue == "") {
                    $('#CityId>option:eq(0)').attr('selected', true);
                }
            },
            error: function (Xr, Status, ErrorMsg) {
                $("#CityId").val('0');
                $('<option>', { value: "0", text: "Select" }).html("Select").appendTo("#CityId");
                $("#waiting").hide();
            }
        });
    }


</script>
