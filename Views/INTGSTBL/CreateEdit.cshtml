@model HangOut.Models.Inventory.INTGSTBL
@using HangOut.Models.Inventory;
 

@{
    Layout = null;
    var ObjOrg = Request.Cookies["UserInfo"];
}
@using HangOut.Models
<div class="card">
    <div class="card-header">
        <h3 style="text-align:center;color:#000000"><b>Add Items</b></h3>
        <hr />
    </div>
    <div class="card-body">

        @using (Ajax.BeginForm("CreateEdit", "INTGSTBL", new { ID = Model.GSID }, new AjaxOptions { HttpMethod = "POST", LoadingElementId = "waiting", OnSuccess = "OnSuccess" }))
        {
            @Html.HiddenFor(model => model.GSID)
        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.ValidationMessageFor(model => model.GSID, "", new { @class = "text-danger" })
            <div class="col-md-4">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label  " })

                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.Label("Category")
                @Html.DropDownListFor(model => model.CatID, new SelectList(INTCategory.GetAll(), "CatID", "Name", Model.CatID), "Select Category Name", new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.CatID, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.Label("Type")
                @Html.DropDownListFor(model => model.Typeid, new SelectList(InventoryType.ListOrgTypeidList(), "Typeid", "Name", Model.Typeid), new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.Typeid, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @{ List<INTUnits> listunit = INTUnits.GetAll();
                    listunit = listunit.FindAll(x => x.ParentId == 0);
                    }
                @Html.Label("Unit")
                @Html.DropDownListFor(model => model.UnitID, new SelectList(listunit, "UnitID", "Name"), "Select Unit", new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.UnitID, "", new { @class = "text-danger" })

            </div>

            <div class="col-md-4" id="Opening">
                @Html.Label("Opening Stock")
                @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })

            </div> 
            <div class="col-md-4">
                @Html.LabelFor(model => model.Prize, htmlAttributes: new { @class = "control-label  " })

                @Html.EditorFor(model => model.Prize, new { htmlAttributes = new { @class = "form-control autodouble", required = "required" } })
                @Html.ValidationMessageFor(model => model.Prize, "", new { @class = "text-danger" })

            </div> 
            <div class="col-md-4">
                @Html.LabelFor(model => model.Tax, htmlAttributes: new { @class = "control-label  " })

                @Html.EditorFor(model => model.Tax, new { htmlAttributes = new { @class = "form-control autodouble", required = "required" } })
                @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })

            </div> 
            <div class="col-md-4">
                @Html.LabelFor(model => model.TotalPrize, htmlAttributes: new { @class = "control-label  " })

                @Html.EditorFor(model => model.TotalPrize, new { htmlAttributes = new { @class = "form-control autodouble", required = "required" , @readonly = "readonly"} })
                @Html.ValidationMessageFor(model => model.TotalPrize, "", new { @class = "text-danger" })

            </div>

            <div class="col-md-1">
                @Html.Label("Save", new { @class = "text-white" })
                <input style="margin-top:25px" type="submit" value="Save" class="btn btn-success" />

            </div>
        </div>
        }
    </div>
</div>
<script>
    $(document).change(function () {
        $("#Opening").hide();
        console.log("sa");
        var Type = $("#Typeid").val();
        if (Type === "0") {
            $("#Opening").hide();
        }
        if (Type === "1") {
            $("#Opening").show();
        } else {
            $("#Opening").hide();
        }
        $("#Prize,#Tax").change(
            function () {
                CalculateTax();
            });
        function CalculateTax() {
            var Price = parseFloat($("#Prize").val());
            var TaxPercentage = parseFloat($("#Tax").val());
            var taxAmt = (Price * TaxPercentage) / 100;
            $("#TotalPrize").val(Price + taxAmt).change();
        }
    });
</script>