@model HangOut.Models.Inventory.INTGSTBL
@using HangOut.Models.Inventory;
@{

    Layout = null;
    var ObjOrg = Request.Cookies["UserInfo"];
}
@using HangOut.Models
<div class="card">
    <div class="card-header">
        <h3 style="text-align:center;color:#000000"><b>Add Items</b></h3>
        <hr />
    </div>
    <div class="card-body">

        @using (Ajax.BeginForm("CreateEdit", "INTGSTBL", new { ID = Model.GSID }, new AjaxOptions { HttpMethod = "POST", LoadingElementId = "waiting", OnSuccess = "OnSuccess" }))
        {
            @Html.HiddenFor(model => model.GSID)
            <div class="row">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.GSID, "", new { @class = "text-danger" })
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label  " })

                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                </div>
                <div class="col-md-4">
                    @Html.Label("Category")
                    @Html.DropDownListFor(model => model.CatID, new SelectList(INTCategory.GetAll(), "CatID", "Name", Model.CatID), "Select Category Name", new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.CatID, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4">
                    @Html.Label("Type")
                    @Html.DropDownListFor(model => model.Typeid, new SelectList(InventoryType.ListOrgTypeidList(), "Typeid", "Name", Model.Typeid), new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.Typeid, "", new { @class = "text-danger" })

                </div>
                <div class="col-md-4">
                    @{ List<INTUnits> listunit = INTUnits.GetAll();
                        listunit = listunit.FindAll(x => x.ParentId == 0);
                    }
                    @Html.Label("Unit")
                    @Html.DropDownListFor(model => model.UnitID, new SelectList(listunit, "UnitID", "Name"), "Select Unit", new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.UnitID, "", new { @class = "text-danger" })

                </div>
                <div class="col-md-4" id="Opening">
                    @Html.Label("Opening Stock")
                    @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })

                </div>
                <div class="col-md-4">
                    <div class="checkbox mt-4">
                        @Html.Label("IS Saleable")

                        @Html.EditorFor(model => model.ISSaleable)
                        @Html.ValidationMessageFor(model => model.ISSaleable, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="checkbox mt-4">
                        @Html.Label("IS Directly Purchased")
                        @Html.EditorFor(model => model.ISdirectlyPurchased)
                        @Html.ValidationMessageFor(model => model.ISdirectlyPurchased, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4 ">
                    <div class="checkbox mt-4">
                        @Html.Label("IS Processed")

                        @Html.EditorFor(model => model.ISProcessed)
                        @Html.ValidationMessageFor(model => model.ISProcessed, "", new { @class = "text-danger", })
                    </div>
                </div>

                <div class="col-md-4">
                    @Html.LabelFor(model => model.Prize, htmlAttributes: new { @class = "control-label  " })

                    @Html.EditorFor(model => model.Prize, new { htmlAttributes = new { @class = "form-control autodouble", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Prize, "", new { @class = "text-danger" })

                </div>
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Tax, htmlAttributes: new { @class = "control-label  " })

                    @Html.EditorFor(model => model.Tax, new { htmlAttributes = new { @class = "form-control autodouble", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })

                </div>
                <div class="col-md-4">
                    @Html.LabelFor(model => model.TotalPrize, htmlAttributes: new { @class = "control-label  " })

                    @Html.EditorFor(model => model.TotalPrize, new { htmlAttributes = new { @class = "form-control autodouble", required = "required", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.TotalPrize, "", new { @class = "text-danger" })

                </div>

            </div>
            <div class="row">
                @foreach (var SubItems in Model.iNTItems)
                {
                @Html.Partial("INTSubItem", SubItems)
                }
            </div>
            <div id="HeadDiv" style="display:none"></div>
            <div class="col-sm-1">
                @Html.Label("Save", new { @class = "text-white" })
                <input type="submit" value="Save" class="btn btn-success" />

            </div>
        }
    </div>
</div>
 

<script>

    typehide();
    $("#Typeid").change(function () {
        typehide();
    });
    function typehide() {
        var Type = $("#Typeid").val();
        if (Type == "0") {
            $("#Opening").hide();
            $("#ISSaleable").parent('div').parent('div').hide();
            $("#Prize").parent('div').hide();
            $("#Tax").parent('div').hide();
            $("#TotalPrize").parent('div').hide();
            $(".MainDivs").hide();
        }
        else {
            $("#Opening").show();
            $("#ISSaleable").parent('div').parent('div').show();
            $("#Prize").parent('div').show();
            $("#Tax").parent('div').show();
            $("#TotalPrize").parent('div').show();
            $("#ItemID").parent('div').show();
            $("#IQty").parent('div').show();
            $("#IUnitID").parent('div').show();
        }
        if (Type == "1") {
            $("#Opening").show();
            $("#ISSaleable").parent('div').parent('div').show();
            $("#Prize").parent('div').hide();
            $("#Tax").parent('div').hide();
            $("#TotalPrize").parent('div').hide();
            $(".MainDivs").hide();
        } else {
            $("#Opening").hide();
            $("#ISSaleable").parent('div').parent('div').hide();

            $("#ISdirectlyPurchased").parent('div').parent('div').hide();
            $("#ISProcessed").parent('div').parent('div').hide();
            $("#btn").hide();
            $("#ItemID").parent('div').hide();
            $("#IQty").parent('div').hide();
            $("#IUnitID").parent('div').hide();
        }
    }
    $("#Prize,#Tax").change(
        function () {
            CalculateTax();
        });
    function CalculateTax() {
        var Price = parseFloat($("#Prize").val());
        var TaxPercentage = parseFloat($("#Tax").val());
        var taxAmt = (Price * TaxPercentage) / 100;
        $("#TotalPrize").val(Price + taxAmt).change();
    }
    SalableChange();
    directchange();
    Processedchange();
    $("#ISSaleable").change(function () {
        SalableChange();
    });
    function SalableChange() {
        if ($("#ISSaleable").is(':checked')) {
            $("#ISdirectlyPurchased").parent('div').parent('div').show();
        }
        else {
            $("#ISdirectlyPurchased").parent('div').parent('div').hide();
        }
    }
    $("#ISdirectlyPurchased").change(function () {
        directchange();
    });
    function directchange() {
        if ($("#ISdirectlyPurchased").is(':checked')) {
            $("#ISProcessed").parent('div').parent('div').show();
        }
        else {
            $("#ISProcessed").parent('div').parent('div').hide();
        }
    }
    $("#ISProcessed").change(function () {
        Processedchange();
    });
    function Processedchange() {
        console.log("ggg");
        if ($("#ISProcessed").is(':checked')) {
           
            $("#Prize").parent('div').show();
            $("#Tax").parent('div').show();
            $("#TotalPrize").parent('div').show();
            $(".MainDivs").show();
        }
        else {
            $("#Prize").parent('div').hide();
            $("#Tax").parent('div').hide();
            $("#TotalPrize").parent('div').hide();
            $("#ItemID").parent('div').hide();
            $("#IQty").parent('div').hide();
            $("#IUnitID").parent('div').hide();
            $("#btn").hide();
        }
        //
    }
    function DuplicateDiv() {
        console.log('hh');
        var MainDivsCnt = document.getElementsByClassName('MainDivs').length;
        var clonediv = $('#CreateCopy').clone();
        clonediv.show();
        clonediv.attr('OrderNo', MainDivsCnt);
        clonediv.insertBefore("#HeadDiv");
    }
    
</script>