@using HangOut.Models;
@{
    Layout = null;
}

<style>
    .card:hover {
        background-color: #e2dbdb;
    }

    .tab {
        overflow: hidden;
        border: 1px solid #ccc;
        background-color: #f1f1f1;
    }

    .tablink, .tablink2 {
        background-color: #555;
        color: white;
        float: left;
        padding: 5px;
        border: none;
        outline: none;
        cursor: pointer;
        font-size: 15px;
        width: 25%;
    }

    .tablink2:hover, .tablink:hover {
        background-color: #000000;
    }

    p .card {
        font-size: 12px !important;
        border-bottom: 1px solid #ebeef0;
        min-height: 50px;
        margin: 0;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        cursor: pointer;
        background-color: #f5f5f5;
    }

    .Pspan {
        align-self: center;
        padding: 8px;
        color: #008cba;
    }

    .sp-grid-cell {
        padding-left: 0;
        padding-bottom: 0;
        padding-right: 8px;
        padding-bottom: 16px;
    }

    .tableFree {
        border-bottom: 3px solid #58d68d;
    }

    .tableProgress {
        border-bottom: 3px solid #e00a0a;
    }

    .tableBooked {
        border-bottom: 3px solid rgba(221, 155, 18, 0.46);
    }

    .sp-grid {
        padding-right: 0;
    }


    .sp-grid-items-scroll-with-noticebar {
        max-height: calc(100vh - 100px);
        overflow-y: auto;
        overflow-x: hidden;
    }

    .sp-grid-cell-contents {
        height: 100px;
        background-color: #f5f5f5;
        cursor: pointer;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        border-top: 1px solid #f5f5f5;
        border-left: 1px solid #f5f5f5;
        border-right: 1px solid #f5f5f5;
    }

    .sp-grid-cell-text {
        padding: 2px;
        -ms-flex-item-align: center;
        -ms-grid-row-align: center;
        align-self: center;
        width: 100%;
        text-align: center;
        overflow-wrap: break-word;
    }

    slot-split-hidden {
        font-size: 12px !important;
        text-align: center;
        padding-top: 8px;
        padding-bottom: 4px;
        margin-bottom: 0;
    }

    .sp-bill {
        padding-left: 10px;
        padding-right: 10px;
        padding-bottom: 10px;
        background-color: #f5f5f5;
    }

    .sp-panel-header {
        padding-top: 10px;
        margin-bottom: 9px;
    }

    .sp-bill-actions {
        margin-bottom: 12px;
    }

    .sp-bill-actions {
        padding-left: 5px;
        padding-right: 5px;
        color: gray;
    }

    .sp-sold-items-scroll-with-noticebar {
        max-height: calc(100vh - 100px);
        overflow-y: auto;
        overflow-x: hidden;
    }

    .sp-quantity-adjust {
        font: 1.2em serif;
        color: #565353;
        padding: 0 5px 0 7px;
        border: 1px solid hsla(0,1%,40%,.35);
        border-radius: 50%;
        height: 25px;
        width: 25px;
        display: inline-block;
        cursor: pointer;
    }

    .sp-no-user-select {
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

    .sp-item-quantity {
        font-size: 17px;
        width: 26px;
        min-width: 26px;
        display: inline-block;
        cursor: pointer;
    }

    .sp-product-price {
        min-width: 95px !important;
    }

    .sp-padright-10 {
        padding-right: 10px;
    }

    .sp-price {
        border-bottom: 1px dotted #8e8e8e;
    }

    .sp-bill-actions {
        margin-bottom: 12px;
    }

    .btn-group-justified {
        display: table;
        width: 100%;
        table-layout: fixed;
        border-collapse: separate;
    }

    group {
        float: none;
        display: table-cell;
        width: 1%;
    }
    /* Style the tab content (and add height:100% for full page content) */
    .search-box, .close-icon, .search-wrapper {
        position: relative;
        padding: 5px;
    }

    .search-wrapper {
        width: 100%;
        margin: auto;
        
    }
    .search-box {
        width: 80%;
        border: 1px solid #ccc;
        outline: 0;
        border-radius: 15px;
    }

        .search-box:focus {
            box-shadow: 0 0 15px 5px #b0e0ee;
            border: 2px solid #bebede;
        }

    .close-icon {
        border: 1px solid transparent;
        background-color: transparent;
        display: inline-block;
        vertical-align: middle;
        outline: 0;
        cursor: pointer;
    }

        .close-icon:after {
            content: "X";
            display: block;
            width: 15px;
            height: 15px;
            position: absolute;
            background-color: #FA9595;
            z-index: 1;
            right: 35px;
            top: 0;
            bottom: 0;
            margin: auto;
            padding: 2px;
            border-radius: 50%;
            text-align: center;
            color: white;
            font-weight: normal;
            font-size: 12px;
            box-shadow: 0 0 2px #E50F0F;
            cursor: pointer;
        }

    .search-box:not(:valid) ~ .close-icon {
        display: none;
    }
</style>
<div class="row">
    <div class="col-md-12 col-sm-12">
        @{
            var cookei = Request.Cookies["UserInfo"];
            var UserCode = cookei["UserCode"];
            var OrgId =int.Parse(cookei["OrgId"]);
            var Seating = "";
            HG_OrganizationDetails ObjOrg = new HG_OrganizationDetails().GetOne(OrgID: OrgId);
            string FloorOrScren = " ";
            int OrgType = 0;
            if (ObjOrg.OrgID > 0 && ObjOrg.OrgTypes == "2")
            {
                FloorOrScren = "Screen";
                OrgType = 2;//theater
                Seating = "SEATS";
            }
            else
            {
                FloorOrScren = "Floor";
                OrgType = 1;// restruant or Admins
                Seating = "Tables";
            }
            List<SelectListItem> list = new List<SelectListItem>();
            SelectListItem sl1 = new SelectListItem { Text = "SEAT VIEW", Value = "1" };
            SelectListItem sl2 = new SelectListItem { Text = "ORDER VIEW", Value = "2" };
            if (OrgType == 1)
            {
                list.Add(sl1);
                list.Add(sl2);
            }
            else
            {
                list.Add(sl2);
                list.Add(sl1);
            }

        }
        @Html.DropDownList("DashBoard", list, new { @class = "form-control", })
        @Html.Hidden("COID", OrgId)
        @Html.Hidden("CUC", UserCode)
        @Html.Hidden("OrgType",OrgType)
    </div>
</div>
<div class="row"  id="SeatView">
    <div class="col-md-12 col-sm-12">
        @Html.DropDownList("ForSID", new SelectList(new HG_Floor_or_ScreenMaster().GetAll(OrgType), "Floor_or_ScreenID", "Name", "0"),FloorOrScren, new { @class = "form-control",onchange="FilterTables(this)" })
    </div>
    <div class="row" style="width:100%">
        <div class="col-xs-12 col-md-12 tab">
            <button class=" tablink" onclick="openPage('Home', this, '#4CAF50')" id="defaultOpen">Orders</button>
            <button class=" tablink" onclick="openPage('News', this, '#4CAF50')" id="Current">Current</button>
        </div>
    </div>

    <div class="row tabcontent2" id="Home" style="width:100%">
        <div class="search-wrapper">
            <form>
                <input type="text" id="TableSearch" onchange="SearchItem('TableSearch','TabAndTakeW')" onkeyup="SearchItem('TableSearch','TabAndTakeW')" name="focus" required class="search-box" placeholder="Search Order Tables..." />
                <button id="TableClr" class="close-icon" type="reset"></button>
            </form>
        </div>
        <div class="col-sm-12 col-md-3 sp-grid-items-scroll-with-noticebar">
            <p class="card" onclick="FilterOrder(0);SelectedColor('card',this)"><span class="Pspan" id="All">All</span></p>
            <p class="card" onclick="FilterOrder(3);SelectedColor('card',this)"><span class="Pspan" id="TakeAway">Take Away</span></p>
            <p class="card" onclick="FilterOrder(1);SelectedColor('card',this)"><span class="Pspan" id="Tables">@Seating</span></p>
            <p class="card" onclick="FreeOrOccupied('1');SelectedColor('card',this)"><span class="Pspan" id="Free">UnOccupied </span></p>
            <p class="card" onclick="FreeOrOccupied('3');SelectedColor('card',this)"><span class="Pspan" id="Occupied">Occupied</span></p>
            <p class="card" onclick="FreeOrOccupied('2');SelectedColor('card',this)"><span class="Pspan" id="Unpaid">Call For Bill</span></p>

        </div>
        <div class="col-sm-12 col-md-9 sp-grid-items-scroll-with-noticebar">
            <div class="row" id="OrderStatus" style="width:100%">

            </div>

        </div>

        <!---->


    </div>
    <div class="row tabcontent2" id="News">
        <div class="col-sm-12 col-md-7">
            <div class="search-wrapper">
                <form>
                    <input type="text" id="ItemSearch2" onchange="SearchItem('ItemSearch2','ItemsClass')" onkeyup="SearchItem('ItemSearch2','ItemsClass')" name="focus" required class="search-box" trim="" placeholder="Search Items..." />
                    <button id="TableClr2" class="close-icon" type="reset"></button>
                </form>
            </div>
            <div class="row">
                <div class=" col-xs-4 col-md-3 sp-grid-items-scroll-with-noticebar" id="CategoryId">



                </div>
                <div class=" col-xs-6 col-md-9 sp-grid-items-scroll-with-noticebar">
                    <div class="row" id="ItemList">


                    </div>


                </div>

            </div>


        </div>
        <div class="col-sm-12 col-md-5 sp-billed-items">
            <div class="sp-bill">
                <p class="sp-panel-header">
                    <span class="sp-hide-if-sm-screen" id="TorTWID">
                        <!--Table name or take-away name-->
                    </span>

                    <span class="badge badge-pill badge-secondary" style="padding:7px" id="FinalAmt">
                        0.00
                    </span>
                    <small class="pull-right sp-bill-actions">
                    </small>
                </p>
                <!---->
                <!----><div>

                    <div>
                        <div class="sp-sold-items-scroll-with-noticebar">
                            <table class="table table-hover sp-product-list">
                                <thead>
                                    <tr>
                                        <th>Item</th>
                                        <th class="sp-quantity-th">Quantity</th>
                                        <th><span class="sp-padright-10"></span>Price</th>

                                        <!---->
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody id="AddItem"></tbody>
                            </table>
                        </div>
                        
                        <div class="btn-group btn-group-justified row" role="group" id="ChargeBtn">
                            <!---->
                            <div id="SubMitbtn" class="btn-group col-md-6" role="group" style="width:50% ;padding:10px ;">
                                <button type="button" class="form-control btn btn-success sp-f2-hotkey" onclick="SUBMIT();">
                                    send to CHEF
                                </button>
                            </div>
                            <div id="InstantClear" class="btn-group col-md-6" role="group" style="width:50%; padding:10px" onclick="INSTANTCLR()">
                                <button type="button" class="form-control btn btn-success sp-f2-hotkey">
                                    bypass CHEF
                                </button>
                            </div>
                            <div id="Charge" class="btn-group" role="group" style="width:100%; padding:10px" onclick="Charge()">
                                <button type="button" class="form-control btn btn-success sp-f2-hotkey" id="FinalAmtCharge">
                                    CHARGE
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div id="PaymnetAndReceipt" class="row" style="display:none">
        <div class="col-md-6">
            <div class="btn-group btn-group-justified" role="group" id="ChargeBtn">
                <!---->
                <div id="ByCash" onclick="ByCash();" class="btn-group" role="group" style="width:50% ;padding:20px">
                    <button type="button" class="form-control btn btn-success sp-f2-hotkey">
                        BY CASH
                    </button>
                </div>
                <div id="ByOnline" onclick="ByOnline();" class="btn-group" role="group" style="width:50%; padding:20px">
                    <button type="button" class="form-control btn btn-success sp-f2-hotkey">
                        By Card/Wallets
                    </button>
                </div>

            </div>

            <div id="ShowItems">
                <style>
                    #InvoiceItems {
                        border-collapse: collapse;
                        width: 100%;
                    }

                        #InvoiceItems td, #customers th {
                            border: 1px solid #ddd;
                            padding: 8px;
                            text-align:center;
                        }

                        #InvoiceItems tr:nth-child(even) {
                            background-color: #f2f2f2;
                        }

                        #InvoiceItems tr:hover {
                            background-color: #ddd;
                        }

                        #InvoiceItems th {
                            padding-top: 8px;
                            padding-bottom: 5px;
                            text-align: center;
                            background-color: #4CAF50;
                            color: white;
                        }
                </style>
                <table id="InvoiceItems">
                    <thead>
                        <tr>
                            <th>ITEMNAME</th>
                            <th>QTY</th>
                            <th>AMOUNT</th>
                            <th>TICKET NO</th>
                        </tr>
                    </thead>
                    <tbody id="ItemsList"></tbody>
                    <tfoot>
                        <tr id="DeliveryChr" style="display:none">
                            <td>Delivery Charge</td>
                            <td></td>
                            <td id="DeliveryCharge"></td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>TOTAL</td>
                            <td id="SumOfQty"></td>
                            <td id="SumOfItem"></td>
                            <td></td>
                        </tr>
                    </tfoot>

                </table>
            </div>
        </div>
        <div class="col-md-6"></div>
        <div class="col-md-12">
            <div id="PrintInvoice" onclick="GenInvoice()" class="btn-group" role="group" style="display:none">
                <button type="button" class="form-control btn btn-success sp-f2-hotkey">
                    SUBMIT
                </button>
            </div>
        </div>


    </div>
</div>

<div class="row" id="OrderView" >


</div>

 <script>
     var OrgId = 0;
     var LoginId = 0;
     var OrgType = 0;
     var TablesList = null;
     var ItemList = null;
     var ChargeAmt = 0.00;
     var CurrentOrder = 0;// which means table or  takeaway id
     var CurrOID = 0; //current Order Id;
        var finalAmt = 0.00;
        var ItemHtmlFirst = "<div class='col-md-3  sp-grid-cell ItemsClass'";
        var ItemHtmlFirstPrefix = "><div class='sp-grid-cell-contents highlight-color-4DB6AC' > <span class='sp-grid-cell-text'>";
        var ItemHtmlSecond = " <span><small class='text-muted'>";
        var ItemHtmlLast = "</small> </span> </span></div></div>";
        var first = "</td ><td><div><div>";
        var Minushtml = "<span class='sp-quantity-adjust sp-no-user-select'";
        var CountHtml = ">−</span ><div class='sp-item-quantity text-center'><span ";
        var PlusHtml = "</span></div><span class='sp-quantity-adjust sp-no-user-select'";
        var Carthtmfirst = ">+</span></div ></div ></td > <td class='sp-product-price'>";
        Carthtmfirst += "<span class='sp-padright-10'></span>"
        var Carthtmlsecond = "<span class='sp-price'>";
        var cartlasthtml = "</span ></td ><td><a class='sp-bill-actions'><span class='glyphicon glyphicon-pencil'></span></a ></td></tr>";
        document.getElementById("defaultOpen").click();
        $("#TableClr2").click(function () {
            $("#ItemSearch2").val('');
            SearchItem('ItemSearch2', 'ItemsClass');
        });
        $("#TableClr").click(function () {
            $("#TableSearch").val('');
            SearchItem('TableSearch', 'TabAndTakeW');
            console.log("AAYA");
     });
     $(document).ready(function () {
         OrgId = $("#COID").val();
         LoginId = $("#CUC").val();
         OrgType = $("#OrgType").val();
     });
        function plus(itemid) {
            var CartValue = parseInt($("#C" + itemid).text());
            AddToCart(itemid, CartValue + 1);
            //$("#" + add).text(CartValue+1);
        }
        function minus(itemid) {
            var CartValue = parseInt($("#C" + itemid).text());
            if (CartValue > 0) {
                AddToCart(itemid, CartValue - 1);
            }

        }
        function AddByItemClick(itemid) {
            if ($("#C" + itemid).length > 0) {
                var CartValue = parseInt($("#C" + itemid).text());
                AddToCart(itemid, CartValue + 1);
            }
            else {
                AddToCart(itemid, 1);
            }
        }
        function AddToCart(ItemId, Cnt) {
            var Obj = {};
            Obj.CID = LoginId;
            Obj.OrgId = OrgId;
            Obj.ItemId = ItemId;
            Obj.Cnt = Cnt;
            Obj.TSTWID = CurrentOrder;
            Obj.OID = CurrOID;
            $.ajax({
                type: 'POST',
                url: "/WebApi/AddCart?Obj=" + JSON.stringify(Obj),
                success: function (data) {
                    var CurritemCnt = parseInt(data.split(",")[3]);
                    var FinlAmt = parseFloat(data.split(",")[1]);
                    $("#FinalAmt").html(FinlAmt);
                    console.log("Count item" + CurritemCnt);
                    var ObjItem = ItemList.find(x => {
                        return x.IID.toString() === ItemId
                    });
                    if (CurritemCnt >= 1) {
                       
                        ObjItem.ItemCartValue = CurritemCnt;
                        if (!ItemAlreadyAdded(ItemId)) {
                            AddItemToQue(ObjItem);
                            ResetOrder(CurrentOrder, 3);
                        }
                        else {
                            $("#C" + ItemId).text(Cnt);
                            var Price = parseFloat(ObjItem.ItemPrice);
                            $("#P" + ItemId).text(Price * Cnt);

                        }

                    }
                    else {
                        if (ChargeAmt <=0) {
                            ResetOrder(CurrentOrder, 1); //free
                        }
                        
                        $("#tr" + ItemId).remove();
                    }
                    var finalChargeToShow = ChargeAmt + FinlAmt;
                    $("#FinalAmtCharge").text('CHARGE ' + finalChargeToShow.toFixed(2) + ' /RS');
                    //$("#" + itemid).text(Cnt);
                },
                error: function (jqXhr, textStatus, errorMessage) { // error callback
                    $("#waiting").hide();
                }
            });
        }
        function AddItemToQue(ObjItem) {
            if (ObjItem.ItemCartValue != '0') {
                var Itemid = ObjItem.IID;
                var ItemPrice = parseFloat(ObjItem.ItemPrice) * parseInt(ObjItem.ItemCartValue);
                $("#AddItem").append("<tr class='ItemsTr' id='tr" + Itemid + "'><td>" + ObjItem.ItemName + first + Minushtml + "onclick='minus(\"" + Itemid + "\")'" + CountHtml + "id='C" + Itemid + "' >" + ObjItem.ItemCartValue + PlusHtml + "onclick='plus(\"" + Itemid + "\")'" + Carthtmfirst + Carthtmlsecond + "₹" + "<Span id='P" + Itemid + "'>" + ItemPrice + "</span>" + cartlasthtml);
            }

        }
        function ItemAlreadyAdded(Itemid) {
            if ($('#tr' + Itemid).length) {
                return true;
            }
            else {
                return false;
            }
        }
        function SearchItem(SearchItem, hideClsName) {
            var input = document.getElementById(SearchItem);
            var filter = input.value.toLowerCase();
            var nodes = document.getElementsByClassName(hideClsName);
            for (i = 0; i < nodes.length; i++) {
                if (nodes[i].innerText.toLowerCase().includes(filter)) {
                    nodes[i].style.display = "block";
                } else {
                    nodes[i].style.display = "none";
                }
            }
        }
        function openPage(pageName, elmnt, color) {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tabcontent2");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
            tablinks = document.getElementsByClassName("tablink");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].style.backgroundColor = "";
            }
            document.getElementById(pageName).style.display = 'flex';
            elmnt.style.backgroundColor = color;
            $("#PaymnetAndReceipt").hide();
        }
        function SelectedColor(classname, event) {
            var tablinks = document.getElementsByClassName(classname);
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].style.backgroundColor = "";
            }
            event.style.backgroundColor = '#e2dbdb';
        }
    // setTimeout(function () { GeTablesTakeAwya() }, 1000);
     function GeTablesTakeAwya() {
         console.log("table list");
            $.ajax({
                type: 'POST',
                url: "/WebApi/TableAndTakeAway?Type="+OrgType+"&OrderById="+LoginId,
                success: function (data) {
                    TablesList = JSON.parse(data);
                    ShowOrders(TablesList);
                },
                error: function (jqXhr, textStatus, errorMessage) { // error callback
                    $("#waiting").hide();
                }
            });

     }
     function FilterTables(event) {
         var ForSid = $(event).val();
         if (ForSid != null && ForSid != "" && ForSid != " ") {
             var ForSidInt = parseInt(ForSid);
             var TakeAwayList = TablesList.filter(function (itm) {
                 return itm.Floor_or_ScreenId == ForSidInt;
             });
             ShowOrders(TakeAwayList);
         }
         else {
             ShowOrders(TablesList);
         }
     }
        function FilterOrder(Status) {
            //all
            if (Status == '0') {
                ShowOrders(TablesList);
            }
            else if (Status == '3') {
                console.log(TablesList);
                var TakeAwayList = TablesList.filter(function (itm) {
                    return itm.Type == '3';
                });
                ShowOrders(TakeAwayList);

            }
            else if (Status == '1') {
                if (OrgType == "1") {
                    var TableListOnly = TablesList.filter(function (itm) {
                        return itm.Type == '1';
                    });
                }
                else {
                    var TableListOnly = TablesList.filter(function (itm) {
                        return itm.Type == '2';
                    });
                }
                ShowOrders(TableListOnly);
                console.log("Table" + TablesList);
            }
            else {
                var TableListOnly = TablesList.filter(function (itm) {
                    return itm.Type == '0';
                });
                ShowOrders(TableListOnly);
            }

        }
        function ShowOrders(list) {
            $("#OrderStatus").html('');
            var html = "<div class='col-xs-6 col-sm-4 col-md-3  sp-grid-cell TabAndTakeW'>";
            html += "<div class='sp-grid-cell-contents  ";//here table color with >
            //html += "<span class='sp-grid-cell-text'>";
            var Second = "<hr class='sp-grid-text-break'>";
            Second += " <small  class='text-muted'";// with Status Name
            var Third = "</small> </span ></div > <p style='text-align:center;font-size:small'";
            for (i = 0; i < list.length; i++) {
                var Name = list[i].Table_or_SheetName;
                var TableID = list[i].Table_or_RowID.toString();
                var Status = list[i].Status;//{"1":free,"2":"BOOKED",3:"PROGRESS"}
                var Otp = list[i].Otp;
                var clasName = "";
                var ShowStatus = "";
                if (Status == 1) {
                    clasName = "tableFree";
                    ShowStatus = "Unoccupied";
                } else if (Status == 2) {
                    clasName = "tableBooked";
                    ShowStatus = "Bill demanded";
                }
                else {
                    clasName = "tableProgress";
                    ShowStatus = "Occupied";
                }
                $("#OrderStatus").append(html + clasName + "' id='TC" + TableID + "'><span class='sp-grid-cell-text' onclick='GetItemList(\"" + TableID + "\")'>" + Name + Second + " id='TS" + TableID + "'>" + ShowStatus + Third + 'id=Otp' + TableID + ">" + Otp+"</p></div>");
            }
        }
        function FreeOrOccupied(Status) {

            if (Status == '1') {
                var FreeList = TablesList.filter(function (x) {
                    return x.Status == 1;
                });
                ShowOrders(FreeList);
                console.log("FreeList" + FreeList.length);

            }
            else if (Status == '3') {
                var OccupiedList = TablesList.filter(function (x) {
                    return x.Status == 3;
                });
                ShowOrders(OccupiedList);
                console.log("OccupiedList" + OccupiedList.length);
            }
            else if (Status == '2') {
                var OccupiedList = TablesList.filter(function (x) {
                    return x.Status == 2;
                });
                ShowOrders(OccupiedList);
                console.log("Call For Bill" + OccupiedList.length);
            }
        }
        function GetItemList(TableOrMWid) {
            CurrentOrder = TableOrMWid;
            GetItemListByCategory(CurrentOrder)
        }
     function GetItemListByCategory(TableOrMWid) {
         $("#waiting").show();
            $("#Current").click();
            var ObjOrderName = TablesList.find(x => {
                return x.Table_or_RowID == TableOrMWid;
            });
            $("#TorTWID").text(ObjOrderName.Table_or_SheetName);
            //assign CurrOid of Perticuar Table Or Sheat or NewTakeAway
            CurrOID = ObjOrderName.CurrOID;
            var Obj = {};
            Obj.CID =LoginId;
            Obj.OrgId = OrgId;
            Obj.TSTWID = TableOrMWid;
            Obj.OID = ObjOrderName.CurrOID;
            $.ajax({
                type: 'POST',
                url: "/WebApi/GetItemList?Obj=" + JSON.stringify(Obj),
                success: function (data) {
                    var CategoryList = JSON.parse(data);
                   // console.log(CategoryList);
                    $("#waiting").hide();
                    ItemList = [];
                    $("#CategoryId").html('');
                    $("#ItemList").html('');
                    $("#AddItem").html('');
                    var funSelected = "SelectedColor(\"card\",this)";
                    var TotalRs = 0.00;
                    ChargeAmt = 0.00;
                    var CategoryHtml = "<p class='card' onclick='" + funSelected + ";filterItemByCat(\"" + 0 + "\")'><span class='Pspan'>All</span></p>";
                    $("#CategoryId").append(CategoryHtml);
                    for (i = 0; i < CategoryList.length; i++) {
                        CategoryHtml = "<p class='card' onclick='" + funSelected + ";filterItemByCat(\"" + CategoryList[i].MenuId + "\")'><span class='Pspan'>" + CategoryList[i].Name + "</span></p>";
                        $("#CategoryId").append(CategoryHtml);
                        var ItemsList = CategoryList[i].MenuItems;
                        for (j = 0; j < ItemsList.length; j++) {
                            ItemList.push(ItemsList[j]);
                            ShowItems(ItemsList[j]);
                            AddItemToQue(ItemsList[j]);
                        }
                        TotalRs += CategoryList[i].MenuItmPrice;
                        ChargeAmt = CategoryList[i].TableAmt;

                    }
                   // ChargeAmt += TotalRs;
                    var Dispalamt = ChargeAmt + TotalRs;
                    console.log('chanrge');
                    $("#FinalAmtCharge").text('CHARGE ' + Dispalamt.toFixed(2) + '/RS');
                    if (CategoryList.length == 0) {

                        $.alert({
                            title: 'Alert!',
                            content: "Menu Not Applied.",
                        });
                    }
                    $("#FinalAmt").text(TotalRs.toFixed(2));

                },
                error: function (jqXhr, textStatus, errorMessage) { // error callback
                    $("#waiting").hide();
                }
            });

        }
        function FilterItems(list) {
            $("#ItemList").html('');
            for (j = 0; j < list.length; j++) {
                ShowItems(list[j]);
            }
        }
     function ShowItems(objitem) {
         console.log("AAYA");
         var PrefixItemHtmlSecond = "";
         if (objitem.ItemMode === "1") {
             PrefixItemHtmlSecond = "<hr class='sp-grid-text-break' style='background:green'>";
         }
         else {
             PrefixItemHtmlSecond = "<hr class='sp-grid-text-break' style='background:red'>";
         }
         $("#ItemList").append(ItemHtmlFirst + "onclick='AddByItemClick(\"" + objitem.IID + "\")'" + ItemHtmlFirstPrefix + objitem.ItemName + PrefixItemHtmlSecond + ItemHtmlSecond + "₹" + objitem.ItemPrice + ItemHtmlLast);
        }
        function filterItemByCat(MenuId) {
            if (MenuId != "0") {
                var FilteredItemList = ItemList.filter(function (x) {
                    return x.MenuId == MenuId;
                });
                FilterItems(FilteredItemList);
            } else {

                FilterItems(ItemList);
            }
        }
        function ResetOrder(OrderId, status) {
            $("#TC" + OrderId).removeClass();
            $("#TS" + OrderId).text('');
            if (status == 1) {
                $("#TC" + OrderId).addClass('sp-grid-cell-contents tableFree');
                $("#TS" + OrderId).text('Unoccupied');
            }
            else if (status == 2) {
                $("#TC" + OrderId).addClass('sp-grid-cell-contents tableBooked');
                $("#TS" + OrderId).text('Bill demanded');
            } else {
                $("#TC" + OrderId).addClass('sp-grid-cell-contents tableProgress');
                $("#TS" + OrderId).text('Occupied');
            }

            for (var i = 0; i < TablesList.length; i++) {
                if (TablesList[i].Table_or_RowID == OrderId) {
                    TablesList[i].Status = status;
                    return;
                }
            }
        }
        function PostOrder(Obj) {
            $.ajax({
                type: 'POST',
                url: "/WebApi/PostOrder?Obj=" + JSON.stringify(Obj),
                success: function (data) {
                    var JsonObj = JSON.parse(data);
                    if (JsonObj.Status == 400) {
                        $.alert({
                            title: 'Alert!',
                            content: JsonObj.MSG,
                        });
                    }
                    else {
                        var JsonMsg = JsonObj.MSG.split(",");
                        $.alert({
                            title: 'Alert!',
                            content: "Order No: " + JsonMsg[0] + " & Ticket No " + JsonMsg[1],
                        });
                        $("tr.ItemsTr").remove();
                        CurrOID = JsonMsg[0];
                        for (var i = 0; i < TablesList.length; i++) {
                            if (TablesList[i].Table_or_RowID == CurrentOrder) {
                                TablesList[i].CurrOID = JsonMsg[0];
                                return;
                            }
                        }
                    }
                },
                error: function (jqXhr, textStatus, errorMessage) { // error callback
                    $("#waiting").hide();
                }
            });


        }
        function SUBMIT() {
            $.confirm({
                title: 'SEND TO CHEF ?',
                content: 'Are You Sure',
                buttons: {
                    btnClass: 'btn-primary',
                    confirm: function () {
                        DeliveryCharge(1);
                    },
                    cancel: function () {

                    }
                }
            });
        }
        function INSTANTCLR() {
            $.confirm({
                title: 'ELEMINATE CHEF ?',
                content: 'Are You Sure',
                buttons: {
                    btnClass: 'btn-green',
                    confirm: function () {
                        // $.alert('Confirmed!');
                        DeliveryCharge(3);
                    },
                    cancel: function () {
                        // $.alert('Canceled!');
                    }
                }
            });
     }
     function DeliveryCharge(Status) {
         var Parmas = {};
         Parmas.CID = LoginId;
         Parmas.OrgId = OrgId;
         Parmas.TSTWID = CurrentOrder
         $.ajax({
             type: 'POST',
             url: "/WebApi/DeliveryCharge?Obj=" + JSON.stringify(Parmas),
             success: function (data) {
                 var Obj = {};
                 Obj.CID = LoginId;
                 Obj.OrgID = OrgId;
                 Obj.TORSID = CurrentOrder;
                 Obj.OID = CurrOID;
                 Obj.Status = Status;
                 Obj.OrdingSts = 1;
                 Obj.AppType = 3;
                 var JsonObj = JSON.parse(data);
                 if (parseFloat(JsonObj.ChargeAmt)>0) {
                     $.confirm({
                         title: 'Delivery Charge ?',
                         content: 'Delivery Charge ' + JsonObj.ChargeAmt+" RS/",
                         buttons: {
                             btnClass: 'btn-green',
                             confirm: function () {
                                 PostOrder(Obj)
                             },
                             cancel: function () {
                                 // $.alert('Canceled!');
                             }
                         }
                     });
                 }
                 else {
                     PostOrder(Obj);
                 }
             },
             error: function (jqXhr, textStatus, errorMessage) { // error callback
                 $("#waiting").hide();
             }
         });
     }
        function Charge() {
            console.log("Curr TorSid +" + CurrentOrder);
            $.ajax({
                type: 'POST',
                url: "/WebApi/ShowOrderItems?TOrSId=" + CurrentOrder,
                success: function (data) {
                    var Jobje = JSON.parse(data);
                    var TableShaetStatus = TablesList.find(x => {
                        return x.Table_or_RowID == CurrentOrder;
                    });

                    if (Jobje.Status == 400 && Jobje.TorSsts!=1) {
                        $.alert({
                            title: 'Alert !',
                            content: 'Already Charged Add More Item To Charge Again',
                        });
                        //Jobje.MSG
                        return;
                    }
                    if (Jobje.Status == 400) {
                        $.alert({
                            title: 'Alert !',
                            content: 'NO TICKETS YET',
                        });
                        //Jobje.MSG
                        return;
                    }
                    else if ($("tr.ItemsTr").length > 0) {
                        $.alert({
                            title: 'Alert !',
                            content: 'please take action on selected item first',
                        });
                        return;
                    }
                    else {
                        $.confirm({
                            title: 'Alert !',
                            content: 'FINALIZE ORDER ?',
                            buttons: {
                                btnClass: 'btn-green',
                                confirm: function () {
                                    var SumItems = 0.00;
                                    var Qty = 0;
                                    $("#ItemsList").html('');
                                    var List = Jobje.ListItems;
                                    for (var i = 0; i < List.length; i++) {

                                       // var ObjItem = ItemList.find(x => {
                                      //      return x.IID == List[i].FID;
                                      //  });
                                        var Price = parseFloat(List[i].Price) * parseInt(List[i].Count);
                                        var td1 = "<tr><td>" + List[i].ItemName + "</td>";
                                        td1 += "<td>" + List[i].Count + "</td>";
                                        td1 += "<td>" + Price + "</td>";
                                        td1 += "<td>" + List[i].TickedNo + "</td></tr>";
                                       // Qty += parseInt(List[i].Count);
                                      //  var total = (List[i].Count * parseFloat(List[i].Price));
                                        $("#ItemsList").append(td1);

                                    }
                                    SumItems = parseFloat(Jobje.Total);
                                    var DeliveryChrage = parseFloat(Jobje.DeliveryChage);
                                    if (DeliveryChrage > 0) {
                                        $("#DeliveryChr").show();
                                        $("#DeliveryCharge").text(DeliveryChrage);
                                    }
                                    else {
                                        $("#DeliveryChr").hide();
                                    }
                                    $("#SumOfQty").text(Qty);
                                    $("#SumOfItem").text(SumItems.toFixed(2) + " Rs/-");
                                    $("#News").hide();
                                    $("#PaymnetAndReceipt").show(); 
                                },
                                cancel: function () {
                                    // $.alert('Canceled!');
                                }
                            }
                        });
                    }

                },
                error: function (jqXhr, textStatus, errorMessage) { // error callback
                    $("#waiting").hide();
                }
            });
        }
        function GenInvoice(oldOtp) {
            $("#waiting").show();
            $.ajax({
                type: 'POST',
                url: "/HG_Orders/PrintInvoice?TorSid="+CurrentOrder+"&OldOtp="+oldOtp+"&OID=0",
                success: function (data) {
                    makedpt("invoice");
                    $("#invoice > .modal-dialog > .modal-content > .modal-body").html(data);
                    showdpt("invoice");
                    $("#waiting").hide();
                    //var Jobje = JSON.parse(data);
                },
                error: function (jqXhr, textStatus, errorMessage) { // error callback
                    $("#waiting").hide();
                }
            });
        }
        function ByCash() {
            $.confirm({
                title: 'BY CASH',
                content: 'Mark Order Completed',
                buttons: {
                    btnClass: 'btn-green',
                    confirm: function () {
                        CompleteOrder(1)// bycash
                    },
                    cancel: function () {
                        // $.alert('Canceled!');
                    }
                }
            });

        }
        function ByOnline() {
            $.confirm({
                title: 'BY ONLINE',
                content: 'Mark Order Completed',
                buttons: {
                    btnClass: 'btn-green',
                    confirm: function () {
                        CompleteOrder(2)// by online
                    },
                    cancel: function () {
                        // $.alert('Canceled!');
                    }
                }
            });

        }
        function CompleteOrder(PaymentType) {
            $.ajax({
                type: 'POST',
                url: "/WebApi/CompleteOrder?PaymentType="+PaymentType+"&UpdatedBy="+LoginId+"&OID=0&TorSid="+CurrentOrder,
                success: function (data) {
                    var Jobj = JSON.parse(data);
                    if (Jobj.Status == 400) {
                        $.alert({
                            title: 'Alert!',
                            content: Jobj.MSG,
                        });
                    }
                    else {
                        // CurrOID = 0;
                        var OldOtp = 0;
                        for (var i = 0; i < TablesList.length; i++) {
                            if (TablesList[i].Table_or_RowID == CurrentOrder) {
                                TablesList[i].CurrOID = 0;
                                OldOtp = TablesList[i].Otp;
                                TablesList[i].Otp = Jobj.MSG;
                            }
                        }
                        $("#Otp" + CurrentOrder).text(Jobj.MSG);
                        if (Jobj.ChangeOtp > 0) {
                            ResetOrder(CurrentOrder, 1);
                        }
                        
                        GenInvoice(OldOtp);
                        $("#defaultOpen").click();
                    }

                },
                error: function (jqXhr, textStatus, errorMessage) { // error callback
                    $("#waiting").hide();
                }
            });
     }
     DashBoard();
     function DashBoard() {
         var value = $("#DashBoard").val();
         if (value == '1') {
             $("#OrderView").hide();
             $("#SeatView").show();
             //GeTablesTakeAwya();
             setTimeout(function () { GeTablesTakeAwya() }, 500);
         } else {
             $("#OrderView").html('');
             $("#OrderView").show();
             $("#SeatView").hide();
             $('#waiting').show();
             $.ajax({
                 type: 'GET',
                 url: "/HG_Orders/DashBoardOrders",
                 success: function (data) {
                     $('#waiting').hide();
                     $("#OrderView").html(data);
                     setTimeout(function () { GetOrders(OrgId) }, 500);
                 },
                 error: function (jqXhr, textStatus, errorMessage) { // error callback
                     $("#waiting").hide();
                 }
             });

         }
     }
     $("#DashBoard").change(function () {
         DashBoard();
     });
    </script>
