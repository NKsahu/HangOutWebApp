@using HangOut.Models;
@{
    Layout = null;
}

<style>
    .card:hover {
        background-color: #e2dbdb;
    }

    .tab {
        overflow: hidden;
        border: 1px solid #ccc;
        background-color: #f1f1f1;
    }

    .tablink, .tablink2 {
        background-color: #ffffff;
        float: left;
        padding: 5px;
        outline: none;
        cursor: pointer;
        font-size: 15px;
        width: 25%;
    }
    p .card {
        font-size: 12px !important;
        border-bottom: 1px solid #ebeef0;
        min-height: 50px;
        margin: 0;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        cursor: pointer;
        background-color: #f5f5f5;
    }
    .Pspan {
        align-self: center;
        padding: 6px;
        color: #008cba;
    }
    .sp-grid-cell {
        padding-left: 0;
        padding-bottom: 0;
        padding-right: 8px;
        padding-bottom: 16px;
    }
    .tableFree {
        border-bottom: 3px solid #58d68d;
    }
    .tableProgress {
        border-bottom: 3px solid #e00a0a;
    }
    .tableBooked {
        border-bottom: 3px solid rgba(221, 155, 18, 0.46);
    }
    .sp-grid {
        padding-right: 0;
    }
    .sp-grid-items-scroll-with-noticebar {
        max-height: calc(100vh - 100px);
        overflow-y: auto;
        overflow-x: hidden;
    }
    .sp-grid-cell-contents {
        height: 100px;
        background-color: #f5f5f5;
        cursor: pointer;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        border-top: 1px solid #f5f5f5;
        border-left: 1px solid #f5f5f5;
        border-right: 1px solid #f5f5f5;
    }
    .sp-grid-cell-text {
        padding: 2px;
        -ms-flex-item-align: center;
        -ms-grid-row-align: center;
        align-self: center;
        width: 100%;
        text-align: center;
        overflow-wrap: break-word;
    }
    slot-split-hidden {
        font-size: 12px !important;
        text-align: center;
        padding-top: 8px;
        padding-bottom: 4px;
        margin-bottom: 0;
    }
    .sp-bill {
        padding-left: 10px;
        padding-right: 10px;
        padding-bottom: 10px;
        background-color: #f5f5f5;
    }
    .sp-panel-header {
        padding-top: 10px;
        margin-bottom: 9px;
    }

    .sp-bill-actions {
        margin-bottom: 12px;
    }

    .sp-bill-actions {
        padding-left: 5px;
        padding-right: 5px;
        color: gray;
    }

    .sp-sold-items-scroll-with-noticebar {
        max-height: calc(100vh - 100px);
        overflow-y: auto;
        overflow-x: hidden;
    }

    .sp-quantity-adjust {
        font: 1.2em serif;
        color: #565353;
        padding: 0 5px 0 7px;
        border: 1px solid hsla(0,1%,40%,.35);
        border-radius: 50%;
        height: 25px;
        width: 25px;
        display: inline-block;
        cursor: pointer;
    }

    .sp-no-user-select {
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

    .sp-item-quantity {
        font-size: 17px;
        width: 26px;
        min-width: 26px;
        display: inline-block;
        cursor: pointer;
    }

    .sp-product-price {
        min-width: 95px !important;
    }

    .sp-padright-10 {
        padding-right: 10px;
    }

    .sp-price {
        border-bottom: 1px dotted #8e8e8e;
    }

    .sp-bill-actions {
        margin-bottom: 12px;
    }

    .btn-group-justified {
        display: table;
        width: 100%;
        table-layout: fixed;
        border-collapse: separate;
    }

    group {
        float: none;
        display: table-cell;
        width: 1%;
    }
    /* Style the tab content (and add height:100% for full page content) */
    .search-box, .close-icon, .search-wrapper {
        position: relative;
        padding: 5px;
    }

    .search-wrapper {
        width: 100%;
        margin: auto;
        
    }
    .search-box {
        width: 80%;
        border: 1px solid #ccc;
        outline: 0;
        border-radius: 15px;
    }

        .search-box:focus {
            box-shadow: 0 0 15px 5px #b0e0ee;
            border: 2px solid #bebede;
        }

    .close-icon {
        border: 1px solid transparent;
        background-color: transparent;
        display: inline-block;
        vertical-align: middle;
        outline: 0;
        cursor: pointer;
    }

        .close-icon:after {
            content: "x";
            display: block;
            width: 15px;
            height: 15px;
            position: absolute;
            background-color: #FA9595;
            z-index: 1;
            right: 35px;
            top: 0;
            bottom: 0;
            margin: auto;
            padding: 2px;
            border-radius: 50%;
            text-align: center;
            color: white;
            font-weight: normal;
            font-size: 12px;
            box-shadow: 0 0 2px #E50F0F;
            cursor: pointer;
        }

    .search-box:not(:valid) ~ .close-icon {
        display: none;
    }
    .LeftBtn{
        float:left;
    }
    .RightBtn{
        float:right;
    }
    .PrintBtnWidth{
        width:20%;
    }
</style>
<div class="row">
    <div class="col-md-12 col-sm-12">
        @{
            var cookei = Request.Cookies["UserInfo"];
            var UserCode = cookei["UserCode"];
            var OrgId =int.Parse(cookei["OrgId"]);
            var Seating = "";
            HG_OrganizationDetails ObjOrg = new HG_OrganizationDetails().GetOne(OrgID: OrgId);
            string FloorOrScren = " ";
            int OrgType = 0;
            if (ObjOrg.OrgID > 0 && ObjOrg.OrgTypes == "2")
            {
                FloorOrScren = "Screen";
                OrgType = 2;//theater
                Seating = "SEATS";
            }
            else
            {
                FloorOrScren = "Floor";
                OrgType = 1;// restruant or Admins
                Seating = "Tables";
            }
            List<SelectListItem> list = new List<SelectListItem>();
            SelectListItem sl1 = new SelectListItem { Text = "SEAT VIEW", Value = "1" };
            SelectListItem sl2 = new SelectListItem { Text = "ORDER VIEW", Value = "2" };
            list.Add(sl1);
            list.Add(sl2);

            //list.Add(sl2);
            //list.Add(sl1);

        }
        @Html.DropDownList("DashBoard", list, new { @class = "form-control", })
        @Html.Hidden("COID", OrgId)
        @Html.Hidden("CUC", UserCode)
        @Html.Hidden("OrgType",OrgType)
    </div>
</div>
<div class="row"  id="SeatView">
    <div class="col-md-12 col-sm-12">
        @Html.DropDownList("ForSID", new SelectList(new HG_Floor_or_ScreenMaster().GetAll(OrgType), "Floor_or_ScreenID", "Name", "0"),FloorOrScren, new { @class = "form-control",onchange="FilterTables(this)" })
    </div>
    <div class="row" style="width:100%">
        <div class="col-xs-12 col-md-12 tab">
            <button class=" tablink blackTest" onclick="openPage('Home', this, '#666')" id="defaultOpen">Orders</button>
            <button class=" tablink blackTest" onclick="openPage('News', this, '#666')" id="Current">Current</button>
        </div>
    </div>

    <div class="row tabcontent2" id="Home" style="width:100%">
        <div class="search-wrapper">
            <form>
                <input type="text" id="TableSearch" onchange="SearchItem('TableSearch','TabAndTakeW')" onkeyup="SearchItem('TableSearch','TabAndTakeW')" name="focus" required class="search-box" placeholder="Search Order Tables..." />
                <button id="TableClr" class="close-icon" type="reset"></button>
            </form>
        </div>
        <div class="col-sm-12 col-md-2 sp-grid-items-scroll-with-noticebar">
            <p class="card" onclick="FilterOrder(0);SelectedColor('card',this)"><span class="Pspan" id="All">All</span></p>
            <p class="card" onclick="FilterOrder(3);SelectedColor('card',this)"><span class="Pspan" id="TakeAway">Take Away</span></p>
            <p class="card" onclick="FilterOrder(1);SelectedColor('card',this)"><span class="Pspan" id="Tables">@Seating</span></p>
            <p class="card" onclick="FreeOrOccupied('1');SelectedColor('card',this)"><span class="Pspan" id="Free">UnOccupied </span></p>
            <p class="card" onclick="FreeOrOccupied('3');SelectedColor('card',this)"><span class="Pspan" id="Occupied">Occupied</span></p>
            <p class="card" onclick="FreeOrOccupied('2');SelectedColor('card',this)"><span class="Pspan" id="Unpaid">Call For Bill</span></p>
        </div>
        <div class="col-sm-12 col-md-10 sp-grid-items-scroll-with-noticebar">
            <div class="row" id="OrderStatus" style="width:100%">

            </div>

        </div>
        <!---->
    </div>
    <div class="row tabcontent2" id="News">
        <div class="col-sm-12 col-md-7">
            <div class="search-wrapper">
                <form>
                    <input type="text" id="ItemSearch2" onchange="SearchItem('ItemSearch2','ItemsClass')" onkeyup="SearchItem('ItemSearch2','ItemsClass')" name="focus" required class="search-box" trim="" placeholder="Search Items..." />
                    <button id="TableClr2" class="close-icon" type="reset"></button>
                </form>
            </div>
            <div class="row">
                <div class=" col-xs-4 col-md-3 sp-grid-items-scroll-with-noticebar" id="CategoryId">



                </div>
                <div class=" col-xs-6 col-md-9 sp-grid-items-scroll-with-noticebar">
                    <div class="row" id="ItemList">

                    </div>


                </div>

            </div>


        </div>
        <div class="col-sm-12 col-md-5 sp-billed-items">
            <div class="row">
                <input type="hidden" id="ContactId" value="0"/>
                <div class="col-md-5">
                    <input id="C_mobile" type="text" maxlength="10" onkeyup="ChangeContactList(this)" class="OnlyNum form-control" placeholder="Mobile No" />
                </div>
                <div class="col-md-5">
                    <input id="C_name" onkeyup="ChangeContactList(this)" type="text" class=" form-control" placeholder="Customer Name" />
                </div>
                <div class="col-md-2">
                    <button id="C_save" onclick="SaveLocalContact()" class="btn btn-success">save</button>
                </div>
            </div>
                <div class="sp-bill">
                    <p class="sp-panel-header">
                        <span class="sp-hide-if-sm-screen" id="TorTWID">
                            <!--Table name or take-away name-->
                        </span>
                        <span>
                            &nbsp; :&nbsp;
                        </span>
                        <span class="badge badge-pill badge-secondary" style="padding:7px" id="FinalAmt">
                            0.00
                        </span>

                        <small style="float:right; font-size:medium">
                            <i class="fas fa-pen" style="color:red" onclick="EditOrder();"></i>
                            <i class="fas fa-eye" style="color:green" onclick="OrdDetail();"></i>
                        </small>
                    </p>
                    <!---->
                    <!----><div>

                        <div>
                            <div class="sp-sold-items-scroll-with-noticebar">
                                <table class="table table-hover sp-product-list">
                                    <thead>
                                        <tr>
                                            <th>Item</th>
                                            <th class="sp-quantity-th">Quantity</th>
                                            <th><span class="sp-padright-10"></span>Amt</th>

                                            <!---->
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody id="AddItem"></tbody>
                                </table>
                            </div>
                           
                            <div class="btn-group btn-group-justified row" role="group" id="ChargeBtn">
                                <!---->
                                <div class="row" style="width:100%">
                                    <div id="SubMitbtn" class="btn-group col-md-6" role="group" style="width:50% ;padding:10px ;">
                                        <button type="button" class="form-control btn btn-success sp-f2-hotkey" onclick="SUBMIT();">
                                            Send to CHEF
                                        </button>
                                    </div>
                                    <div id="InstantClear" class="btn-group col-md-6" role="group" style="width:50%; padding:10px" onclick="INSTANTCLR()">
                                        <button type="button" class="form-control btn btn-success sp-f2-hotkey">
                                            Direct ADD-To BILL
                                        </button>
                                    </div>
                                </div>
                                <!--discount and charge-->
                                <div class="row" style="width:100%">
                                    <div id="AddCharge" class="col-md-6"  style="width:50% ;padding:10px ;">
                                        <button type="button" class=" btn-sm btn-success sp-f2-hotkey" style="float:right" onclick="AddChargeDiscnt(2);">
                                            Add Charge
                                        </button>
                                    </div>
                                    <div id="Discnt"  class="col-md-6"  style="width:50%; padding:10px;">
                                        <button type="button" class="  btn-sm btn-success sp-f2-hotkey" onclick="AddChargeDiscnt(1);">
                                            Discount
                                        </button>
                                    </div>
                                </div>

                                <div id="Charge" class="btn-group" role="group" style="width:100%; padding:10px" onclick="Charge()">
                                    <button type="button" class="form-control btn btn-success sp-f2-hotkey" id="FinalAmtCharge">
                                        CHARGE
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
    </div>
    <div id="PaymnetAndReceipt" class="row" style="display:none">
        <div class="col-md-6">
            <div class="btn-group btn-group-justified" role="group" id="ChargeBtn">
                <!---->
                <div id="ByCash" onclick="ByCash();" class="btn-group" role="group" style="width:50% ;padding:20px">
                    <button type="button" class="form-control btn btn-success sp-f2-hotkey">
                        BY CASH
                    </button>
                </div>
                <div id="ByOnline" onclick="ByOnline();" class="btn-group" role="group" style="width:50%; padding:20px">
                    <button type="button" class="form-control btn btn-success sp-f2-hotkey">
                        By Card/Wallets
                    </button>
                </div>

            </div>

            <div id="ShowItems">
                <style>
                    #InvoiceItems {
                        border-collapse: collapse;
                        width: 100%;
                    }

                        #InvoiceItems td, #customers th {
                            border: 1px solid #ddd;
                            padding: 8px;
                            text-align:center;
                        }

                        #InvoiceItems tr:nth-child(even) {
                            background-color: #f2f2f2;
                        }

                        #InvoiceItems tr:hover {
                            background-color: #ddd;
                        }

                        #InvoiceItems th {
                            padding-top: 8px;
                            padding-bottom: 5px;
                            text-align: center;
                            background-color: #4CAF50;
                            color: white;
                        }
                </style>
                <table id="InvoiceItems">
                    <thead>
                        <tr>
                            <th>ITEMNAME</th>
                            <th>QTY</th>
                            <th>AMOUNT</th>
                            <th>TICKET NO</th>
                        </tr>
                    </thead>
                    <tbody id="ItemsList"></tbody>
                    <tfoot>
                        <tr id="DeliveryChr" style="display:none">
                            <td>Delivery Charge</td>
                            <td></td>
                            <td id="DeliveryCharge"></td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>TOTAL</td>
                            <td id="SumOfQty"></td>
                            <td id="SumOfItem"></td>
                            <td></td>
                        </tr>
                    </tfoot>

                </table>
            </div>
        </div>
        <div class="col-md-6"></div>
        <div class="col-md-12">
            <div id="PrintInvoice" onclick="GenInvoice()" class="btn-group" role="group" style="display:none">
                <button type="button" class="form-control btn btn-success sp-f2-hotkey">
                    SUBMIT
                </button>
            </div>
        </div>


    </div>
</div>

<div class="row" id="OrderView" >


</div>
<div id="PrintInvoice" style="display:none">

</div>

 <script>
     var ReloadSeatingSts = false;
     var timer = null;
     var OrgId = 0;
     var LoginId = 0;
     var OrgType = 0;
     var CartList = [];
     var TablesList = null;
     var ItemList = null;
     var ChargeAmt = 0.00;
     var CurrentOrder = 0;// which means SeatingId  Table/Seat/TakeAway
     var CurrOID = 0; //current Order Id;
     var finalAmt = 0.00;
     //===printer setting
     var PrintInvoice = 0;//false
     var NoOfCopy = 0;
     var OrderDisplay = 1;//default Mobile
     var KotPrintType = 0;
     var KotNoOfCopy = 0;
     var ParcelCharge = 0.00;
     //=======
        var ItemHtmlFirst = "<div class='col-md-3  sp-grid-cell ItemsClass'";
        var ItemHtmlFirstPrefix = "><div class='sp-grid-cell-contents highlight-color-4DB6AC' > <span class='sp-grid-cell-text'>";
        var ItemHtmlSecond = " <span><small class='text-muted'>";
        var ItemHtmlLast = "</small> </span> </span></div></div>";
        var first = "</td ><td><div><div>";
        var Minushtml = "<span class='sp-quantity-adjust sp-no-user-select'";
        var CountHtml = ">−</span ><div class='sp-item-quantity text-center'><span ";
        var PlusHtml = "</span></div><span class='sp-quantity-adjust sp-no-user-select'";
        var Carthtmfirst = ">+</span></div ></div ></td > <td class='sp-product-price'>";
        Carthtmfirst += "<span class='sp-padright-10'></span>"
        var Carthtmlsecond = "<span class='sp-price'>";
        var cartlasthtml = "</span ></td >";
        document.getElementById("defaultOpen").click();
        $("#TableClr2").click(function () {
            $("#ItemSearch2").val('');
            SearchItem('ItemSearch2', 'ItemsClass');
        });
        $("#TableClr").click(function () {
            $("#TableSearch").val('');
            SearchItem('TableSearch', 'TabAndTakeW');
            
     });
     $(document).ready(function () {
         OrgId = $("#COID").val();
         LoginId = $("#CUC").val();
         OrgType = $("#OrgType").val();
     });
        function plus(itemid,ItmUUID) {
            var CartValue = parseInt($("#C" + ItmUUID).text());
            AddToCart(itemid, ItmUUID, CartValue + 1);
            //$("#" + add).text(CartValue+1);
        }
     function minus(itemid, ItmUUID) {
         var CartValue = parseInt($("#C" + ItmUUID).text());
            if (CartValue > 0) {
                AddToCart(itemid, ItmUUID, CartValue - 1);
            }

        }
     function AddByItemClick(itemid) {

         //check item apply addons
         var ObjItem = ItemList.find(x => {
             return x.IID.toString() === itemid
         });
         if ("Addons" in ObjItem) {

             console.log("adddons" + ObjItem.Addons);
             OpenAddons(ObjItem.Addons, itemid);
             return;
         }
         var UUID = ObjItem.UUID;
         if (UUID != null && UUID != "") {
              var carts = CartList.filter(function (x) {
                 return x.ItemId.toString() == itemid;});
             if (carts.length > 0) {
                 for (var i = 0; i<carts.length; i++) {
                     if (carts[i].IsParcel == 0) {
                         UUID = carts[i].ItemUUID;
                         break;
                     }
                     if (i == (carts.length - 1)) {
                         UUID = "";
                     }
                 }
             }
         }
         if ($("#C" + UUID).length > 0) {
             var CartValue = parseInt($("#C" + UUID).text());
             AddToCart(itemid, UUID, CartValue + 1);
            }
         else {
             AddToCart(itemid, UUID, 1);
          }
     }
     function OpenAddons(AddonList,ItemId) {
       
        
         var html = "";
         var strhtml = '<div class="card">';
         strhtml += '<div class="card-body">';
         strhtml +='<div class="AddOnnCls row">';
         for (var i = 0; i < AddonList.length; i++) {
             // title
             strhtml +='<div class="row" style="border:1px solid black" >';
             strhtml += '<div class="col-md-8">';
             strhtml += '<label></label>';
             strhtml += '<input type="text" id="Addon' + AddonList[i].TitleId + '" readonly value="'+ AddonList[i].AddOnTitle+'" class="form-control" />';
             strhtml += '</div>';
             //min 
             strhtml += '<div class="col-md-2">';
             strhtml += '<label>Min</label>';
             strhtml += ' <input type="text" id="Min' + AddonList[i].TitleId+'" readonly value="'+ AddonList[i].Min+'" class="form-control" />';
             strhtml += '</div>';

             //max
             strhtml += '<div class="col-md-2">';
             strhtml += '<label>Max</label>';
             strhtml += ' <input type="text" readonly id="Max' + AddonList[i].TitleId +'" value="' + AddonList[i].Max +'" class="form-control" />';
             strhtml += '</div>';
             //=====items =====serving size
             strhtml += '<div class="col-md-12" id="Items" >'
             for (var j = 0; j < AddonList[i].AddOnItemList.length;j++) {
                 strhtml += '<div class="row">';
                 //item 
                 strhtml += '<div class="col-md-6">';
                // strhtml += '<label></label>';
                 strhtml += '<input type="text" readonly  value="' + AddonList[i].AddOnItemList[j].Title+'" class="form-control" />';
                 strhtml += '</div>';
                 //amt
                 strhtml += '<div class="col-md-3">';
               //  strhtml += '  <label></label>';
                 strhtml += '<input type="text" id="Price'+AddonList[i].AddOnItemList[j].AddOnItemId+'" readonly value="' + AddonList[i].AddOnItemList[j].Price.toFixed(2) +'" class="form-control" />';
                 strhtml += '</div>';
                 //tax
                 strhtml += '<div class="col-md-3">';
                // strhtml += '  <label></label>';
                 strhtml += '<input type="checkbox" TitileId="' + AddonList[i].TitleId + '" id="' + AddonList[i].AddOnItemList[j].AddOnItemId + '" class="form-control AddonCheckBox ' + AddonList[i].TitleId+'" />';
                 strhtml += '</div>';
                 strhtml += ' </div>';
                
             }
             strhtml += ' </div>';
             strhtml += ' </div>';
         }
        

         //submit and cancel button
         strhtml += '<div class="col-md-3"> <button onclick="CancelAddon()" class="btn btn-md btn-danger">Cancel</button> </div>';
         strhtml+='<div class="col-md-6"></div>'
         strhtml += '<div class="col-md-3"><button onclick="SubmitAddon('+ItemId+')" class="btn btn-md btn-success">Submit</button> </div>';

         strhtml += ' </div>';
         strhtml += ' </div>';
         strhtml += ' </div>';
         makedpt("ShowAddon",300,400);
         $("#ShowAddon > .modal-dialog > .modal-content > .modal-body").html(strhtml);
         showdpt("ShowAddon");

     }
     function CancelAddon() {
         hidedpt("ShowAddon");
     }
     function SubmitAddon(itemid) {
         var ObjItem = ItemList.find(x => {
             return x.IID === itemid
         });

         console.log("item sum");
         var ObjItmAddon = {};
         var AddonItemSelected = document.getElementsByClassName("AddonCheckBox");
         var AddonItemIdCsv = "";
         var ItemPrice = parseFloat(ObjItem.ItemPrice);
         var AddonItemId = [];
         var AddonAmts = [];
         var NotSelectedIds = [];
         var ArrayAddonsId = [];
         for (var i = 0; i < AddonItemSelected.length; i++) {
             var ObjCheckBx = $(AddonItemSelected[i]);
             if (ObjCheckBx.is(':checked')) {
                 console.log("Aaya=" + AddonItemSelected[i]);
                 if (i == (AddonItemSelected.length - 1)) {
                     AddonItemIdCsv += ObjCheckBx.attr('id');
                 }
                 else {
                     AddonItemIdCsv += ObjCheckBx.attr('id') + ",";
                 }

                 AddonItemId.push(ObjCheckBx.attr('id'));
                // sumOfItem += parseFloat($("#Price" + ObjCheckBx.attr('id')).val());
                var addonamt=parseFloat($("#Price" + ObjCheckBx.attr('id')).val());
                 AddonAmts.push(addonamt);
                 var titleId = ObjCheckBx.attr('TitileId');
                 ArrayAddonsId.push(titleId);
                 var Min = parseInt($("#Min" + titleId).val());
                 var Max = parseInt($("#Max" + titleId).val());
                 var AddonAppliedArray = ArrayAddonsId.filter(function (titid) {
                     return titid == titleId;
                 });
                 var Items = document.getElementsByClassName(titleId);
                 if (Items.length == AddonAppliedArray.length) {
                     var result = AddonValidation(titleId);
                     if (result != null) {
                         return;
                     }
                 }
             }
             else {
                 var titleId = ObjCheckBx.attr('TitileId');
                 ArrayAddonsId.push(titleId);
                 var Items = document.getElementsByClassName(titleId);
                 var AddonAppliedArray = ArrayAddonsId.filter(function (titid) {
                     return titid == titleId;
                 });
                 if (Items.length == AddonAppliedArray.length) {
                     var result = AddonValidation(titleId);
                     if (result != null) {
                         return;
                     }
                 }

             }


         }
         ObjItmAddon.AddonItemIdCsv = AddonItemIdCsv;
         ObjItmAddon.AddonItemId = AddonItemId;
         ObjItmAddon.AddonAmts = AddonAmts;
         $("#waiting").show();
         //==
         var ObjCart = {};
         ObjCart.CID = LoginId;
         ObjCart.ItemId = itemid;
         ObjCart.TableorSheatOrTaleAwayId = CurrentOrder;
         ObjCart.itemAddons = ObjItmAddon;
         ObjCart.ItemPrice = ItemPrice;
         ObjCart.OrgId = OrgId;
         ObjCart.IsAddon = 1;
         ObjCart.ParcelCharge = 0.00;
          ObjCart.AddonAmts = AddonAmts;
         ResetOrder(CurrentOrder, 3);

         var CurrItemIndex = CartList.findIndex(x => {
             return (x.ItemId == ObjCart.ItemId && x.itemAddons != null && x.itemAddons.AddonItemIdCsv == AddonItemIdCsv &&x.IsParcel==0 &&x.TableorSheatOrTaleAwayId==CurrentOrder)
         });
         var ItemUUID = "";
         var Cnt = 1;
         var IsParcel = 0;
         var ItemPrice = 0.00;
         if (CurrItemIndex>=0 &&CartList[CurrItemIndex].IsParcel==0) {
             Cnt=CartList[CurrItemIndex].Count + 1
             CartList[CurrItemIndex].Count = Cnt;
             ItemUUID = CartList[CurrItemIndex].ItemUUID;
             ItemPrice = CartList[CurrItemIndex].ItemPrice;
             IsParcel=CartList[CurrItemIndex].IsParcel;
         }
         else {
             ObjCart.Count = Cnt;
             ObjCart.ItemUUID = GetUUID();
             ObjCart.IsParcel = IsParcel;
             ItemUUID = ObjCart.ItemUUID;
             ItemPrice = ObjCart.ItemPrice;
             CartList.push(ObjCart);
         }
         if (ItemAlreadyAdded(Object.UUID)) {
             $("#tr" + Object.UUID).remove();
         }
         ObjItem.ItemArray = [];
         ObjItem.ItemCartValue = 1;
         if (ItemAlreadyAdded(ItemUUID)) {
              $("#tr" + ItemUUID).remove();
         }
         var ObjItmAdd = {};
             ObjItmAdd.UUID = ItemUUID;
             ObjItmAdd.IsAddon = 1;
             ObjItmAdd.Price = ItemPrice;
         ObjItmAdd.Cnt = Cnt;
         ObjItmAdd.ParcelCharge = 0.00;
         ObjItmAdd.AddonAmts = AddonAmts;
         ObjItmAdd.IsParcel = IsParcel;
         ObjItem.ItemArray.push(ObjItmAdd);
         AddItemToQue(ObjItem);
                 //ItemArray
         hidedpt("ShowAddon");
         //update final amt
         var FinlAmt = 0.00;
         var CurrSeatingItem = CartList.filter(function (x) {
                 return x.TableorSheatOrTaleAwayId == CurrentOrder;
         });
         for (var i = 0; i < CurrSeatingItem.length; i++) {
             FinlAmt += CurrSeatingItem[i].ItemPrice * CurrSeatingItem[i].Count;
             FinlAmt +=CurrSeatingItem[i].ParcelCharge *CurrSeatingItem[i].Count;
             if (CurrSeatingItem[i].IsAddon == 1) {
                 for (var j = 0; j < CurrSeatingItem[i].AddonAmts.length; j++) {
                     FinlAmt+=CurrSeatingItem[i].AddonAmts[j]*CurrSeatingItem[i].Count;
                 }
             }
         }
         ShowSeatingAmt(FinlAmt);
         $("#waiting").hide();
     }
     function AddToCartOffline(itemId, ItemUUID, Cnt) {

         var ObjItem=ItemList.find(x => {
                return x.IID.toString() == itemId;
         });
         var SingleItemPrice = 0.00;
         var AddonAmts = 0.00;
         var IsParcel = 0;
         var ParcelCharge = 0.00;
         if (CartList.length > 0) {
             var Cart=CartList.find(x => {
                return x.ItemUUID == ItemUUID;
             });
             if (Cart != null) {
                 console.log("Cart Count=" + CartList.length);
                 for (var i = 0; i < CartList.length; i++) {
                     if (CartList[i].ItemUUID == ItemUUID) {
                         CartList[i].Count = Cnt;
                         SingleItemPrice = CartList[i].ItemPrice;
                         IsParcel = CartList[i].IsParcel;
                         ParcelCharge=CartList[i].ParcelCharge;
                         if (CartList[i].IsAddon == 1) {
                             for (var j = 0; j < CartList[i].AddonAmts.length; j++) {
                             AddonAmts+=CartList[i].AddonAmts[j]*CartList[i].Count;
                           }
                         }
                         if (Cnt <= 0) {
                             CartList.splice(i, 1);
                         }
                         break;
                     }
                 }
                 console.log("Update Cart Count=" + CartList.length);
             }
             else {
             var Cart = {};
             Cart.CID = LoginId;
             Cart.ItemId = itemId;
             Cart.Count = Cnt;
             Cart.TableorSheatOrTaleAwayId = CurrentOrder;
             Cart.OrgId = OrgId;
             Cart.ItemPrice = ObjItem.ItemPrice;
             SingleItemPrice = Cart.ItemPrice;
             Cart.ItemUUID = GetUUID();
             Cart.IsParcel = IsParcel;
             Cart.ParcelCharge = 0;;
             ItemUUID = Cart.ItemUUID;
             CartList.push(Cart);

             }
         }
         else {

             var Cart = {};
             Cart.CID = LoginId;
             Cart.ItemId = itemId;
             Cart.Count = Cnt;
             Cart.TableorSheatOrTaleAwayId = CurrentOrder;
             Cart.OrgId = OrgId;
             if (ItemUUID == null || ItemUUID == "" || ItemUUID === 'undefined') {
                 Cart.ItemUUID = GetUUID();
             }
             else {
                 Cart.ItemUUID = ItemUUID;
             }
             Cart.IsParcel = IsParcel;
             Cart.ItemPrice = ObjItem.ItemPrice;
             Cart.ParcelCharge = 0;
             SingleItemPrice = Cart.ItemPrice;
              ItemUUID = Cart.ItemUUID;
             CartList.push(Cart);
             //  ItemPrice { get; set; }
             //   IsAddon { get; set; } //0: no , 1: yes
         }
         console.log("cnt=" + CartList.length);
         var FinlAmt = 0.00;
         var CurrSeatingItem = CartList.filter(function (x) {
                 return x.TableorSheatOrTaleAwayId == CurrentOrder;
         });
         console.log("Cuuseatingcnt=" + CurrSeatingItem.length +"Finalamt="+FinlAmt);
         for (var i = 0; i < CurrSeatingItem.length; i++) {
             FinlAmt += CurrSeatingItem[i].ItemPrice * CurrSeatingItem[i].Count;
             FinlAmt +=CurrSeatingItem[i].ParcelCharge *CurrSeatingItem[i].Count;
             if (CurrSeatingItem[i].IsAddon == 1) {
                 for (var j = 0; j < CurrSeatingItem[i].AddonAmts.length; j++) {
                     FinlAmt+=CurrSeatingItem[i].AddonAmts[j]*CurrSeatingItem[i].Count;
                 }
             }
         }
         //==============
         for (i = 0; i < ItemList.length; i++) {
                        if (ItemList[i].IID.toString() === itemId) {
                            ItemList[i].UUID = ItemUUID;
                            break;
                        }
          }
         if (!ItemAlreadyAdded(ItemUUID)) {
             $("#tr" + ItemUUID).remove();
             ObjItem.ItemCartValue = 1;
             ObjItem.ItemArray = [];
             var ObjItmAdd = {};
             ObjItmAdd.UUID = ItemUUID;
             ObjItmAdd.IsAddon = 0;
             ObjItmAdd.Price = SingleItemPrice;
             ObjItmAdd.IsParcel = IsParcel;
             ObjItmAdd.ParcelCharge=ParcelCharge;
             ObjItmAdd.Cnt = Cnt;
             ObjItem.ItemArray.push(ObjItmAdd);
             if (Cnt > 0) {
                 AddItemToQue(ObjItem);
                 ResetOrder(CurrentOrder, 3);
             }
         }
         else {
             $("#C" + ItemUUID).text(Cnt);
             var newamt = SingleItemPrice * Cnt;
             newamt += ParcelCharge * Cnt;
             newamt += AddonAmts;
          $("#P" + ItemUUID).text(newamt.toFixed(2));
         }
         //remove items
         if (Cnt == 0) {
             $("#tr" + ItemUUID).remove();
         }
         // show Final Order Price Floor_or_ScreenId
         var ObjSeating=TablesList.find(x => {
                return x.Table_or_RowID.toString()== CurrentOrder;
         });

         if (CurrSeatingItem.length == 0 &&ObjSeating.CurrOID!=null&&ObjSeating.CurrOID==0) {
             ResetOrder(CurrentOrder, 1);
         }
         ShowSeatingAmt(FinlAmt);
     }
     function ShowSeatingAmt(SeatAmt) {
         $("#FinalAmt").html(SeatAmt.toFixed(2));
         var finalChargeToShow = ChargeAmt + SeatAmt;
        $("#FinalAmtCharge").text('CHARGE ' + finalChargeToShow.toFixed(2) + ' /RS');
     }
     function GetUUID() {
      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
      return v.toString(16);
      });
     }
     function AddonValidation(titileid) {
         var Items = document.getElementsByClassName(titileid);
         var checkedcnt = 0;
         var unchecked = 0;
         for (var j = 0; j < Items.length; j++) {
             var obj = $(Items[j]);
             var titleId = obj.attr('TitileId');
             var Min = parseInt($("#Min" + titleId).val());
             var Max = parseInt($("#Max" + titleId).val());
             var title = $("#Addon" + titleId).val();
             console.log("aaya");
             if (obj.is(':checked')) {
                 checkedcnt += 1;
             }
             else {
                 unchecked += 1;
             }
         }
         if (Items.length == unchecked + checkedcnt) {
             condition = true;
         }
         if (checkedcnt > Min && condition &&checkedcnt>Max) {
             alert("Qty can't more than " + Max + " of " + title);
             return 1;
         }
         if (checkedcnt < Min && condition) {
             alert("Select Minimum " + Min + " Qty of " + title);
             return 1;
         }
         if (checkedcnt > Max && condition) {
             alert("Qty can't more than " + Max + " of " + title);
             return 1;
         }
         if (unchecked == Items.length && Min > 0) {

             alert('Select atleast ' + Min + ' Item from ' + title);
             return 1;
         }
         else {
             return null;
         }
     }
     function AddToCart(ItemId, ItmUUID, Cnt) {
         AddToCartOffline(ItemId, ItmUUID, Cnt);
     }
        function AddItemToQue(ObjItem) {
            if (ObjItem.ItemCartValue != '0') {
                var Itemid = ObjItem.IID;
                var ItemUUIDS = ObjItem.ItemArray;
                for (var i = 0; i < ItemUUIDS.length; i++) {
                   // console.log("==" + ItemUUIDS[i]);
                    var ObjUUID = ItemUUIDS[i];
                    var ItmUUID = ItemUUIDS[i].UUID;
                    var IsAddon = ItemUUIDS[i].IsAddon;
                    var IsParcel = ItemUUIDS[i].IsParcel;
                    var info = "";
                    var ItemPrice = parseFloat(ObjUUID.Price) * parseInt(ObjUUID.Cnt);
                    ItemPrice+=ItemUUIDS[i].ParcelCharge*parseInt(ObjUUID.Cnt);
                    if (IsAddon == 1) {
                        info += " <i class='fa fa-info-circle' " + "onclick='AddonInfo(\"" + ItmUUID + "\",\"" + Itemid + "\")'" + "aria-hidden='true'></i>";
                        for (j = 0; j < ItemUUIDS[i].AddonAmts.length; j++) {
                            ItemPrice+=parseFloat(ItemUUIDS[i].AddonAmts[j]) * parseInt(ObjUUID.Cnt);
                        }
                    }
                    var ParcelHtml = "<td><i UUID="+ItmUUID+" title='make parcel' onclick='Makeparcel(this)' class='fas fa-shopping-bag'></i></td></tr>";
                    if (IsParcel == 1) {
                         ParcelHtml = "<td><i style='color:red'title='remove parcel' UUID="+ItmUUID+" onclick='Makeparcel(this)' class='fas fa-shopping-bag'></i></td></tr>";
                    }
                    $("#AddItem").append("<tr class='ItemsTr' id='tr" + ItmUUID + "'><td>" + ObjItem.ItemName + first + Minushtml + "onclick='minus(\"" + Itemid + "\",\"" + ItmUUID + "\")'" + CountHtml + "id='C" + ItmUUID + "' >" + ObjUUID.Cnt + PlusHtml + "onclick='plus(\"" + Itemid + "\",\"" + ItmUUID + "\")'" + Carthtmfirst + Carthtmlsecond + "₹" + "<Span id='P" + ItmUUID + "'>" + ItemPrice.toFixed(2) + "</span>"+info + cartlasthtml+ParcelHtml);
                }
                
            }

        }
        function ItemAlreadyAdded(Itemid) {
            if ($('#tr' + Itemid).length) {
                return true;
            }
            else {
                return false;
            }
     }
     function Makeparcel(event) {
         var itemuuid = $(event).attr('UUID');
        // console.log("aaya parcel");
         var CountAmt = 0.00;
         for (var i = 0; i < CartList.length; i++) {
                     if (CartList[i].ItemUUID == itemuuid) {
                        // SingleItemPrice = CartList[i].ItemPrice;
                         if (CartList[i].IsParcel == 0) {
                             $(event).css('color', 'red');
                             $(event).attr('title', 'remove parcel');
                             CartList[i].IsParcel = 1;
                             CartList[i].ParcelCharge = ParcelCharge;
                             
                         }
                         else {
                             $(event).css('color', 'black');
                             CartList[i].IsParcel = 0;
                             $(event).attr('title', 'make parcel');
                             CartList[i].ParcelCharge = 0;
                         }
                         CountAmt = CartList[i].ItemPrice * CartList[i].Count;
                         CountAmt += CartList[i].ParcelCharge * CartList[i].Count;
                         if (CartList[i].IsAddon == 1) {
                            for (var j = 0; j < CartList[i].AddonAmts.length; j++) {
                                CountAmt+=CartList[i].AddonAmts[j]*CartList[i].Count;
                            }
                         }
                         break;
                     }
         }
         var CurrSeatingItem = CartList.filter(function (x) {
                 return x.TableorSheatOrTaleAwayId == CurrentOrder;
         });
         $("#P" + itemuuid).text(CountAmt.toFixed(2));
         var FinlAmt = 0.00;
         for (var i = 0; i < CurrSeatingItem.length; i++) {
             FinlAmt += CurrSeatingItem[i].ItemPrice * CurrSeatingItem[i].Count;
             FinlAmt+=CurrSeatingItem[i].ParcelCharge*CurrSeatingItem[i].Count;
             if (CurrSeatingItem[i].IsAddon == 1) {
                 for (var j = 0; j < CurrSeatingItem[i].AddonAmts.length; j++) {
                     FinlAmt+=CurrSeatingItem[i].AddonAmts[j]*CurrSeatingItem[i].Count;
                 }
             }
         }
         ShowSeatingAmt(FinlAmt);
     }
        function SearchItem(SearchItem, hideClsName) {
            var input = document.getElementById(SearchItem);
            var filter = input.value.toLowerCase();
            var nodes = document.getElementsByClassName(hideClsName);
            for (i = 0; i < nodes.length; i++) {
                if (nodes[i].innerText.toLowerCase().includes(filter)) {
                    nodes[i].style.display = "block";
                } else {
                    nodes[i].style.display = "none";
                }
            }
        }
        function openPage(pageName, elmnt, color) {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tabcontent2");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
            tablinks = document.getElementsByClassName("tablink");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].style.backgroundColor = "";
            }
            document.getElementById(pageName).style.display = 'flex';
            elmnt.style.backgroundColor = color;
            $("#PaymnetAndReceipt").hide();
        }
        function SelectedColor(classname, event) {
            var tablinks = document.getElementsByClassName(classname);
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].style.backgroundColor = "";
            }
            event.style.backgroundColor = '#e2dbdb';
        }
     function GeTablesTakeAwya() {
         $.ajax({
             type: 'POST',
             url: "/AdminApi/GetSeating",
             success: function (data) {
                 var Seating = JSON.parse(data);
                // if (ReloadSeatingSts == false) {
                 TablesList = Seating.Seating;
                 console.log("table===" + TablesList);
                     ShowOrders(TablesList);
                   //  ReloadSeatingSts = true;
                     //if (timer !== 'undefined' || timer != null) {
                     //    clearTimeout(timer);
                     //}
                     //setTimeout(FunctionExist, 50000);//60000
               //  }
                 //else {
                 //    ReloadSeatingSts = true;
                 //    ReloadSeating();
                 //    //clearTimeout(timer);
                 //    setTimeout( FunctionExist, 50000);//60000
                 //}

             },
             error: function (jqXhr, textStatus, errorMessage) { // error callback
                 $("#waiting").hide();
             }
         });

     }
     function FunctionExist() {
         if ($("#Home").length>0 && typeof GeTablesTakeAwya === 'function') {
             GeTablesTakeAwya();
         }
     }
     function FilterTables(event) {
         var ForSid = $(event).val();
         if (ForSid != null && ForSid != "" && ForSid != " ") {
             var ForSidInt = parseInt(ForSid);
             var TakeAwayList = TablesList.filter(function (itm) {
                 return itm.Floor_or_ScreenId == ForSidInt;
             });
             ShowOrders(TakeAwayList);
         }
         else {
             ShowOrders(TablesList);
         }
     }
        function FilterOrder(Status) {
            //all
            if (Status == '0') {
                ShowOrders(TablesList);
            }
            else if (Status == '3') {
                console.log(TablesList);
                var TakeAwayList = TablesList.filter(function (itm) {
                    return itm.Type == '3';
                });
                ShowOrders(TakeAwayList);

            }
            else if (Status == '1') {
                if (OrgType == "1") {
                    var TableListOnly = TablesList.filter(function (itm) {
                        return itm.Type == '1';
                    });
                }
                else {
                    var TableListOnly = TablesList.filter(function (itm) {
                        return itm.Type == '2';
                    });
                }
                ShowOrders(TableListOnly);
                console.log("Table" + TablesList);
            }
            else {
                var TableListOnly = TablesList.filter(function (itm) {
                    return itm.Type == '0';
                });
                ShowOrders(TableListOnly);
            }

        }
        function ShowOrders(list) {
            $("#OrderStatus").html('');
            var html = "<div class='col-xs-6 col-sm-4 col-md-3  sp-grid-cell TabAndTakeW'>";
            html += "<div class='sp-grid-cell-contents  ";//here table color with >
            //html += "<span class='sp-grid-cell-text'>";
            var Second = "<hr class='sp-grid-text-break'>";
            Second += " <small  class='text-muted'";// with Status Name
            var Third = "</small> </span ></div > <p style='text-align:center;font-size:small'";
            for (i = 0; i < list.length; i++) {
                var Name = list[i].Table_or_SheetName;
                var TableID = list[i].Table_or_RowID.toString();
                var Status = list[i].Status;//{"1":free,"2":"BOOKED",3:"PROGRESS"}
                var Otp = list[i].Otp;
                var clasName = "";
                var ShowStatus = list[i].SeatingUser == null ? "" : list[i].SeatingUser;
                if (Status == 1) {
                    clasName = "tableFree";
                    //ShowStatus = "Unoccupied";
                } else if (Status == 2) {
                    clasName = "tableBooked";
                    //ShowStatus = "Bill demanded";
                }
                else {
                    clasName = "tableProgress";
                   // ShowStatus = "Occupied";
                }
                $("#OrderStatus").append(html + clasName + "' id='TC" + TableID + "'><span class='sp-grid-cell-text' onclick='GetItemList(\"" + TableID + "\")'>" + Name + Second + " id='TS" + TableID + "'>" + ShowStatus + Third + 'id=Otp' + TableID + ">" + Otp+"</p></div>");
            }
        }
        function FreeOrOccupied(Status) {

            if (Status == '1') {
                var FreeList = TablesList.filter(function (x) {
                    return x.Status == 1;
                });
                ShowOrders(FreeList);
                console.log("FreeList" + FreeList.length);

            }
            else if (Status == '3') {
                var OccupiedList = TablesList.filter(function (x) {
                    return x.Status == 3;
                });
                ShowOrders(OccupiedList);
                console.log("OccupiedList" + OccupiedList.length);
            }
            else if (Status == '2') {
                var OccupiedList = TablesList.filter(function (x) {
                    return x.Status == 2;
                });
                ShowOrders(OccupiedList);
                console.log("Call For Bill" + OccupiedList.length);
            }
     }
     function ReloadSeating() {
        
         for (i = 0; i < TablesList.length; i++) {
             var TableID = TablesList[i].Table_or_RowID.toString();
             var Status = TablesList[i].Status;//{"1":free,"2":"BOOKED",3:"PROGRESS"}
             var Otp = TablesList[i].Otp;
             var clasName = "";
             var ShowStatus = TablesList[i].SeatingUser == null ? "" : TablesList[i].SeatingUser;
             if (Status == 1) {
                 clasName = "tableFree";
             } else if (Status == 2) {
                 clasName = "tableBooked";
             }
             else {
                 clasName = "tableProgress";
             }
             $("#TC" + TableID).removeClass();
             $("#TC" + TableID).addClass("sp-grid-cell-contents " + clasName);
             $("#TS" + TableID).text(ShowStatus);
             $("#Otp" + TableID).text(Otp);
         }
     }
        function GetItemList(TableOrMWid) {
            CurrentOrder = TableOrMWid;
            GetItemListByCategory(CurrentOrder)
        }
        function GetItemListByCategory(TableOrMWid) {
         $("#waiting").show();
            $("#Current").click();
            var ObjOrderName = TablesList.find(x => {
                return x.Table_or_RowID == TableOrMWid;
            });
            console.log("Item list");
            var CurrSeatObj = ObjOrderName;
            var CategoryList = CurrSeatObj.MenuItems;
            $("#C_mobile").val('');
            $("#C_name").val('');
            $("#TorTWID").text(ObjOrderName.Table_or_SheetName);
            //assign CurrOid of Perticuar Table Or Sheat or NewTakeAway
            CurrOID = ObjOrderName.CurrOID;
            
            ItemList = [];
            $("#CategoryId").html('');
            $("#ItemSearch2").val('');
            $("#ItemList").html('');
            $("#AddItem").html('');
            var funSelected = "SelectedColor(\"card\",this)";
            var TotalRs = 0.00;
            ChargeAmt = 0.00;
            var CurrSeatingItem = CartList.filter(function (x) {
                 return x.TableorSheatOrTaleAwayId == CurrentOrder;
         });
            var CategoryHtml = "<p class='card' onclick='" + funSelected + ";filterItemByCat(\"" + 0 + "\")'><span class='Pspan'>All</span></p>";
            $("#CategoryId").append(CategoryHtml);
            for (i = 0; i < CategoryList.length; i++) {
                        CategoryHtml = "<p class='card' onclick='" + funSelected + ";filterItemByCat(\"" + CategoryList[i].MenuId + "\")'><span class='Pspan'>" + CategoryList[i].Name + "</span></p>";
                        $("#CategoryId").append(CategoryHtml);
                        var ItemsList = CategoryList[i].MenuItems;
                        for (j = 0; j < ItemsList.length; j++) {
                            ItemList.push(ItemsList[j]);
                            ShowItems(ItemsList[j]);
                            var CartalreadyAdded=CurrSeatingItem.filter(function (x) {
                                return x.ItemId == ItemsList[j].IID.toString();
                            });
                            if (CartalreadyAdded.length > 0) {
                                var list = [];
                                for (var k = 0; k < CartalreadyAdded.length; k++) {
                                    var Jobj = {};
                                    Jobj.UUID= CartalreadyAdded[k].ItemUUID;
                                   Jobj.Price= CartalreadyAdded[k].ItemPrice;
                                    Jobj.Cnt = CartalreadyAdded[k].Count;
                                    Jobj.IsAddon = CartalreadyAdded[k].IsAddon;
                                    if (Jobj.IsAddon == 1) {
                                        Jobj.AddonAmts = CartalreadyAdded[k].AddonAmts;
                                    }
                                    Jobj.IsParcel = CartalreadyAdded[k].IsParcel;
                                    Jobj.ParcelCharge = CartalreadyAdded[k].ParcelCharge;
                                    list.push(Jobj);
                                }
                                ItemsList[j].ItemCartValue = CartalreadyAdded.length;
                                ItemsList[j].ItemArray = list;
                                AddItemToQue(ItemsList[j]);
                            }
                            
                        }
                        

            }
           ChargeAmt =parseFloat(CurrSeatObj.SeatingAmt);
         for (var c = 0; c < CurrSeatingItem.length; c++) {
             TotalRs += CurrSeatingItem[c].ItemPrice * CurrSeatingItem[c].Count;
             TotalRs+=CurrSeatingItem[c].ParcelCharge*CurrSeatingItem[c].Count;
             if (CurrSeatingItem[c].IsAddon == 1) {
                 for (var j = 0; j < CurrSeatingItem[c].AddonAmts.length; j++) {
                     TotalRs+=CurrSeatingItem[c].AddonAmts[j]*CurrSeatingItem[c].Count;
                 }
             }
         }
            $("#waiting").hide();
            ShowSeatingAmt(TotalRs);
            if (CategoryList.length == 0) {

                        $.alert({
                            title: 'Alert!',
                            content: "Menu Not Applied.",
                        });
                        return;
                    }
            
            $("#ContactId").val(CategoryList[0].ContactId);
            var MobileNo = CategoryList[0].Mobile;
            var Cname = CategoryList[0].CName;
            $("#C_mobile").val(MobileNo);
            $("#C_name").val(Cname);
            if (CategoryList[0].ContactId == -1) {
                        $('#C_mobile,#C_name').prop('readonly', true);
                        $("#C_save").attr('disabled', 'disabled');
                    }

        }
        function FilterItems(list) {
            $("#ItemList").html('');
            for (j = 0; j < list.length; j++) {
                ShowItems(list[j]);
            }
        }
        function ShowItems(objitem) {
         console.log("AAYA");
         var PrefixItemHtmlSecond = "";
         if (objitem.ItemMode === "1") {
             PrefixItemHtmlSecond = "<hr class='sp-grid-text-break' style='background:green'>";
         }
         else {
             PrefixItemHtmlSecond = "<hr class='sp-grid-text-break' style='background:red'>";
         }
         $("#ItemList").append(ItemHtmlFirst + "onclick='AddByItemClick(\"" + objitem.IID + "\")'" + ItemHtmlFirstPrefix + objitem.ItemName + PrefixItemHtmlSecond + ItemHtmlSecond + "₹" + objitem.ItemPrice + ItemHtmlLast);
        }
        function filterItemByCat(MenuId) {
            if (MenuId != "0") {
                var FilteredItemList = ItemList.filter(function (x) {
                    return x.MenuId == MenuId;
                });
                FilterItems(FilteredItemList);
            } else {

                FilterItems(ItemList);
            }
        }
        function ResetOrder(OrderId, status) {
            $("#TC" + OrderId).removeClass();
            $("#TS" + OrderId).text('');
            if (status == 1) {
                $("#TC" + OrderId).addClass('sp-grid-cell-contents tableFree');
               // $("#TS" + OrderId).text('Unoccupied');
            }
            else if (status == 2) {
                $("#TC" + OrderId).addClass('sp-grid-cell-contents tableBooked');
               // $("#TS" + OrderId).text('Bill demanded');
            } else {
                $("#TC" + OrderId).addClass('sp-grid-cell-contents tableProgress');
                //$("#TS" + OrderId).text('Occupied');
            }

            for (var i = 0; i < TablesList.length; i++) {
                if (TablesList[i].Table_or_RowID == OrderId) {
                    TablesList[i].Status = status;
                    return;
                }
            }
        }
     function PostOrder(Obj) {
         var CurrSeatingItems = CartList.filter(function (x) {
                 return x.TableorSheatOrTaleAwayId == CurrentOrder;
         });
         Obj.OrderList = CurrSeatingItems;
         $("#waiting").show();
            $.ajax({
                type: 'POST',
                url: "/WebApi/MakeOfflineOrd?Obj=" + JSON.stringify(Obj),
                success: function (data) {
                    var JsonObj = JSON.parse(data);
                    $("#waiting").hide();
                    if (JsonObj.Status == 400) {
                        $.alert({
                            title: 'Alert!',
                            content: JsonObj.MSG,
                        });
                    }
                    else {
                        console.log("remove item");
                        CartList=CartList.filter(function (x) {
                            return x.TableorSheatOrTaleAwayId != CurrentOrder;
                        });
                        var JsonMsg = JsonObj.MSG.split(",");
                        var PaymentSts = JsonMsg[2];
                        var OrderSts =parseInt(JsonObj.OrderSts);
                        if (PaymentSts != "0") {
                            ChargeAmt = 0.00;
                            ShowSeatingAmt(ChargeAmt);
                            for (var i = 0; i < TablesList.length; i++) {
                                if (TablesList[i].Table_or_RowID == CurrentOrder) {
                                    TablesList[i].SeatingAmt = 0.00;
                                    break;
                                }
                            }
                        }
                        else {
                            var finalAmt = parseFloat($("#FinalAmt").text());
                            finalAmt += parseFloat(JsonObj.DeliveryChrge);
                            ChargeAmt = ChargeAmt + finalAmt;
                            $("#FinalAmtCharge").text('CHARGE ' + ChargeAmt.toFixed(2) + ' /Rs.');
                            for (var i = 0; i < TablesList.length; i++) {
                                if (TablesList[i].Table_or_RowID == CurrentOrder) {
                                    TablesList[i].SeatingAmt = ChargeAmt;
                                    break;
                                }
                            }
                        }
                        $("tr.ItemsTr").remove();
                        CurrOID = JsonMsg[0];
                        if (OrderSts == 1) {
                            for (var i = 0; i < TablesList.length; i++) {
                                if (TablesList[i].Table_or_RowID == CurrentOrder) {
                                    TablesList[i].CurrOID = JsonMsg[0];
                                    break;
                                }
                            }
                        }
                        else {
                            ResetOrder(CurrentOrder, 1);
                            for (var i = 0; i < TablesList.length; i++) {
                                if (TablesList[i].Table_or_RowID == CurrentOrder) {
                                    TablesList[i].CurrOID = 0;
                                    break;
                                }
                            }
                            
                        }
                        
                        if (PrintInvoice == 1 && Obj.PaymtType != 0) {
                            AskNofCopyPrint(1,JsonMsg[0], JsonMsg[1]);
                        }
                        else {
                            if (Obj.PaymtType != 0) {
                                DisplyOrderConfirmMsg(1, JsonMsg[0], JsonMsg[1]);
                            }
                            else {
                                ConfirmOrder(JsonMsg[0], JsonMsg[1]);
                            }
                        }
                        // kot mode on and auto print
                        if (OrderDisplay == 2 && KotPrintType == 2 && Obj.Status!=3) {
                            DisplyOrderConfirmMsg(2, JsonMsg[0], JsonMsg[1]);
                        }
                        else if (OrderDisplay == 2 && KotPrintType == 1 && Obj.Status != 3) {
                            AskNofCopyPrint(2, JsonMsg[0], JsonMsg[1]);
                        }
                    }
                },
                error: function (jqXhr, textStatus, errorMessage) { // error callback
                    $("#waiting").hide();
                }
            });
        }
        function SUBMIT() {
         DeliveryCharge(1);
        }
        function INSTANTCLR() {
         DeliveryCharge(3);
         }
        function DeliveryCharge(Status) {
         var Parmas = {};
         Parmas.CID = LoginId;
         Parmas.OrgId = OrgId;
         Parmas.TSTWID = CurrentOrder;
         $.ajax({
             type: 'POST',
             url: "/WebApi/DeliveryCharge?Obj=" + JSON.stringify(Parmas),
             success: function (data) {
                 var Obj = {};
                 Obj.CID = LoginId;
                 Obj.OrgID = OrgId;
                 Obj.TORSID = CurrentOrder;
                 Obj.OID = CurrOID;
                 Obj.Status = Status;
                 Obj.OrdingSts = 1;
                 Obj.AppType = 3;
                 Obj.PaymtType = 0;
                 Obj.ContactId = $("#ContactId").val();
                 var Msg = "Send To Chef ?";
                 var ChrMsg = "Send To Chef & Charge?";
                 if (Status == '3') {
                     Msg = "Eleminate Chef ?";
                     ChrMsg = "Eleminate Chef & Charge?";
                 }
                 var titlemsg = '<div class="row">';
                 titlemsg += '<div class="col-md-6"><h4 style="text-align:left;">'+Msg+'</h4></div>';
                 titlemsg += '<div class="col-md-6"><h4 style="text-align:right;">' + ChrMsg+'</h4></div>';
                 titlemsg += '</div>';
                 var JsonObj = JSON.parse(data);
                 if (parseFloat(JsonObj.ChargeAmt) > 0) {
                     var DeliveryType = JsonObj.DeliveryType;
                     var incldmsg = '';
                     var Postfix = '';
                     if (DeliveryType == '1') {
                         incldmsg = 'fixed';
                     }
                     else {
                         Postfix = 'below Rs ' + JsonObj.MinAmt;
                     }
                     var DelivryMsg = 'A ' + incldmsg + ' delivery charge of Rs ' + JsonObj.ChargeAmt + ' applicable ' + Postfix;
                     $.confirm({
                         title:'<p style="color:red;">'+ DelivryMsg+'</p>',
                         content: titlemsg,
                         closeIcon: true,
                         boxWidth: '40%',
                         useBootstrap: false,
                         buttons: {
                             confirm: {
                                 text: 'Confirm',
                                 btnClass: 'btn-info LeftBtn',
                                 columnClass:'col-md-3',
                                 action: function () {
                                     PostOrder(Obj);
                                 }
                             },
                             cancel: {
                                 text:'Cancel',
                                 btnClass: 'btn-red LeftBtn',
                                 keys: ['Esc', 'esc'],
                                 columnClass: 'col-md-3'
                             },
                             ByWallet: {
                                 text: 'Bank/Wallet',
                                 btnClass: 'btn-success RightBtn',
                                 columnClass: 'col-md-3',
                                 action: function () {
                                     Obj.PaymtType = 2;
                                     PostOrder(Obj);
                                 }
                             },
                             Bycash: {
                                 text: 'Cash',
                                 btnClass: 'btn-info RightBtn',
                                 keys: ['enter', 'shift'],
                                 columnClass: 'col-md-3',
                                 action: function () {
                                     Obj.PaymtType = 1;
                                     PostOrder(Obj);
                                 }
                             }
                         }
                         ,
                         onContentReady: function () {
                            
                         },
                         onOpenBefore: function () {
                             $(".jconfirm-buttons").css('width', '100%');
                         },
                         onDestroy: function () {
                             $(".jconfirm-buttons").removeAttr('width');
                         }
                     });
                 }
                 else {
                     $.confirm({
                         title: '<p>Are You Sure</p>',
                         content: titlemsg,
                         closeIcon: true,
                         boxWidth: '40%',
                         useBootstrap: false,
                         buttons: {
                             confirm: {
                                 text: 'Confirm',
                                 btnClass: 'btn-info LeftBtn',
                                 columnClass: 'col-md-3',
                                 action: function () {
                                     PostOrder(Obj)
                                 }
                             },
                             cancel: {
                                 text: 'Cancel',
                                 btnClass: 'btn-red LeftBtn',
                                 columnClass: 'col-md-3'
                             },
                             ByWallet: {
                                 text: 'Bank/Wallet',
                                 btnClass: 'btn-success RightBtn',
                                 columnClass: 'col-md-3',
                                 action: function () {
                                     Obj.PaymtType = 2;
                                     PostOrder(Obj);
                                 }
                             },
                             ByCash: {
                                 text: 'Cash',
                                 btnClass: 'btn-info RightBtn',
                                 keys: ['enter', 'shift'],
                                 columnClass: 'col-md-3',
                                 action: function () {
                                     Obj.PaymtType = 1;
                                     PostOrder(Obj);
                                 }
                             }
                         }
                         ,
                         onContentReady: function () {
                         },
                         onOpenBefore: function () {
                             $(".jconfirm-buttons").css('width', '100%');
                         },
                         onDestroy: function () {
                             $(".jconfirm-buttons").removeAttr('width');
                         }
                     });
                 }
             },
             error: function (jqXhr, textStatus, errorMessage) { // error callback
                 $("#waiting").hide();
             }
         });
     }
        function Charge() {
           // console.log("Curr TorSid +" + CurrentOrder);
            $.ajax({
                type: 'POST',
                url: "/WebApi/ShowOrderItems?TOrSId=" + CurrentOrder,
                success: function (data) {
                    var Jobje = JSON.parse(data);
                     if($("tr.ItemsTr").length > 0) {
                        $.alert({
                            title: 'Alert !',
                            content: 'please take action on selected item first',
                              });
                            return;
                      }
                    else if (Jobje.Status == 400 && Jobje.TorSsts!=1) {
                        $.alert({
                            title: 'Alert !',
                            content: 'Already Charged ',
                        });
                        //Jobje.MSG
                        return;
                    }
                     else if (Jobje.Status == 400 && Jobje.TorSsts == 1) {
                        $.alert({
                            title: 'Alert !',
                            content: 'NO TICKETS YET',
                        });
                        //Jobje.MSG
                        return;
                    }
                    else {
                        FinaliZeOrd();
                    }

                },
                error: function (jqXhr, textStatus, errorMessage) { // error callback
                    $("#waiting").hide();
                }
            });
        }
        function GenInvoice(oldOtp, OID) {
         if (OID == undefined || OID == null) {
             OID = 0;
         }
         $("#PrintInvoice").html('');
            $("#waiting").show();
            $.ajax({
                type: 'POST',
                url: "/HG_Orders/PrintInvoice?TorSid="+CurrentOrder+"&OldOtp="+oldOtp+"&OID="+OID,
                success: function (data) {
                    $("#PrintInvoice").html(data);
                    PrintElem();
                    $("#waiting").hide();
                    //var Jobje = JSON.parse(data);
                },
                error: function (jqXhr, textStatus, errorMessage) { // error callback
                    $("#waiting").hide();
                }
            });
        }
        function ByCash() {
          CompleteOrder(1)// bycash
        }
        function ByOnline() {
         CompleteOrder(2)// by online
        }
        function CompleteOrder(PaymentType) {
            $.ajax({
                type: 'POST',
                url: "/WebApi/CompleteOrder?PaymentType=" + PaymentType + "&UpdatedBy=" + LoginId + "&OID=0&TorSid=" + CurrentOrder +"&AppType=3",
                success: function (data) {
                    var Jobj = JSON.parse(data);
                    if (Jobj.Status == 400) {
                        $.alert({
                            title: 'Alert!',
                            content: Jobj.MSG,
                        });
                    }
                    else {
                        // CurrOID = 0;
                        var OldOtp = 0;
                        for (var i = 0; i < TablesList.length; i++) {
                            if (TablesList[i].Table_or_RowID == CurrentOrder) {
                                TablesList[i].CurrOID = 0;
                                OldOtp = TablesList[i].Otp;
                                TablesList[i].Otp = Jobj.MSG;
                            }
                        }
                        $("#Otp" + CurrentOrder).text(Jobj.MSG);
                        if (Jobj.ChangeOtp > 0) {
                            ResetOrder(CurrentOrder, 1);
                        }
                        if (PrintInvoice == 1) {
                            AskNofCopyPrint(1, Jobj.OID, 0);
                        }
                        else {
                            OpenPrinter(1, Jobj.OID, NoOfCopy, 0);
                               
                        }
                        //GenInvoice(OldOtp,0);
                        $("#defaultOpen").click();
                    }

                },
                error: function (jqXhr, textStatus, errorMessage) { // error callback
                    $("#waiting").hide();
                }
            });
     }
     function OrdDetail() {
         $("#waiting").show();
         $.ajax({
             type: 'POST',
             url: "/HG_OrderItem/index?OID=" + CurrOID,
             success: function (data) {
                 makedpt("CurrOrder");
                 $("#CurrOrder > .modal-dialog > .modal-content > .modal-body").html(data);
                 showdpt("CurrOrder");
                 $("#waiting").hide();
             },
             error: function (jqXhr, textStatus, errorMessage) { // error callback
                 $("#waiting").hide();
             }
         });
     }
     function EditOrder() {
         $("#waiting").show();
         $.ajax({
             type: 'POST',
             url: "/HG_Orders/EditOrder?OID=" + CurrOID,
             success: function (data) {
                 makedpt("CurrOrder");
                 $("#CurrOrder > .modal-dialog > .modal-content > .modal-body").html(data);
                 showdpt("CurrOrder");
                 $("#waiting").hide();
             },
             error: function (jqXhr, textStatus, errorMessage) { // error callback
                 $("#waiting").hide();
             }
         });
     }
     function FinaliZeOrd() {
         $.confirm({
             title: 'Alert !',
             content: 'FINALIZE ORDER ?',
             buttons: {
                 Bycash:{
                     text: 'ByCash',
                     btnClass : 'btn-info',
                     action: function() {
                         ByCash();
                     }
                 },
                 ByOnline: {
                     text: 'Bank/Wallet',
                         btnClass : 'btn-success',
                         action: function() {
                             ByOnline();
                         }
                 },
                 cancel: function () {
                     // $.alert('Canceled!');
                 }
             }
         });
     }
     DashBoard();
     function DashBoard() {
         var value = $("#DashBoard").val();
         if (value == '1') {
             $("#OrderView").hide();
             $("#SeatView").show();
             //GeTablesTakeAwya();
             setTimeout(function () { GeTablesTakeAwya() }, 500);
         } else {
             $("#OrderView").html('');
             $("#OrderView").show();
             $("#SeatView").hide();
             $('#waiting').show();
             $.ajax({
                 type: 'GET',
                 url: "/HG_Orders/DashBoardOrders",
                 success: function (data) {
                     $('#waiting').hide();
                     $("#OrderView").html(data);
                     setTimeout(function () { GetOrders(OrgId) }, 500);
                 },
                 error: function (jqXhr, textStatus, errorMessage) { // error callback
                     $("#waiting").hide();
                 }
             });

         }
     }
     $("#DashBoard").change(function () {
         DashBoard();
     });
     function ChangeContactList(event) {
         var ContctID = $("#ContactId").val();
         console.log("value=" + ContctID);
         if (ContctID>=0) {
             $("#C_save").removeAttr('disabled');
         }
         if ($(event).attr('id') == "C_mobile") {
             if ($(event).val().length == 10 && $("#C_name").val() == "") {
                 GetContactNameByMobile($(event).val());
                 $("#C_name").focus();
             }
             
             
         }
     }
     function SaveLocalContact() {
         var Mobile = $("#C_mobile").val();
         var C_name = $("#C_name").val();
         var ContctID = $("#ContactId").val();
         if (Mobile == "") {
             alert("Mobile No required");
             return;
         }
         if ( Mobile != "" && (Mobile.length < 10 || Mobile.length>10)) {
             alert("Mobile Number Must Be 10 Digit");
             return;
         }
         if (ContctID >= 0) {
             $("#waiting").show();
             $.ajax({
                 type: 'POST',
                 url: "/CommonApi/SaveLocalContact?Mobile=" + Mobile + "&Cname=" + C_name + "&ContctID=" + ContctID,
                 success: function (data) {
                     var Jobj = JSON.parse(data);
                     if (Jobj.Status == 200) {
                         $("#ContactId").val(Jobj.ContactId);
                         $("#C_save").attr('disabled', 'disabled');
                     }
                     $("#waiting").hide();
                 },
                 error: function (jqXhr, textStatus, errorMessage) { // error callback
                     $("#waiting").hide();
                 }
             });
         }
        
     }
     function GetContactNameByMobile(MobileNo) {
         $.ajax({
             type: 'POST',
             url: "/CommonApi/GetNameByMobileNo?MobileNo=" + MobileNo,
             success: function (data) {
                 var Jobj = JSON.parse(data);
                 if (Jobj.Status == 200) {
                     $("#C_name").val(Jobj.CName);
                 }
             },
             error: function (jqXhr, textStatus, errorMessage) { // error callback
             }
         });
     }
     function ConfirmOrder(OID, TicketNo) {
         $.confirm({
             title: "Alert",
             content: 'Order No: ' + OID + ' & Ticket No ' + TicketNo,
             buttons: {
                 Ok: {
                     text: 'OK',
                     btnClass: 'btn-info',
                     action: function () {

                     }
                 },

             }
         });
     }
     function DisplyOrderConfirmMsg(Type, OID, TicketNo) {
         console.log(" DisplyOrderConfirmMsg Type=" + Type)
         var Msg = "";
         if (Type == 2 && OrderDisplay == 2) {
             OpenPrinter(Type, OID, KotNoOfCopy, TicketNo);
             return;
             //Msg = "Print Kot";
         }
         else if (Type == 1) {
             if (PrintInvoice == 2) {
                 OpenPrinter(Type, OID, NoOfCopy, TicketNo);
             }
             Msg = "Print Invoice";
         }
         $.confirm({
             title: Msg,
             content: 'Order No: ' + OID + ' & Ticket No ' + TicketNo,
             buttons: {
                 Ok: {
                     text: 'OK',
                     btnClass: 'btn-info',
                     action: function () {
                      
                         
                     }
                 },
                 
             }
         });
     }
     function AskNofCopyPrint(Type, OID, Ticket) {
         console.log(" AskNofCopyPrint Type=" + Type);
         var Msg = "";
         var ContentMsg = 'Order No: ' + OID;
         if (Ticket > 0) {
             ContentMsg+=' & Ticket No ' + Ticket;
         }
         if (Type == 1) {
             Msg = "Print Invoice";
         }
         else if (Type == 2) {
             Msg = "Print Kot";
         }
         $.confirm({
             title: Msg,
             content: ContentMsg,
             closeIcon: true,
             buttons: {
                Zero: {
                    text: '0',
                    btnClass: 'btn-info btn-lg PrintBtnWidth',
                    keys: ['0'],
                    columnClass: 'col-md-3',
                     action: function () {
                         
                     }
                 },
                 One: {
                     text: '1',
                     btnClass: 'btn-info btn-lg PrintBtnWidth',
                     columnClass: 'col-md-3',
                     keys: ['1'],
                     action: function () {
                         OpenPrinter(Type, OID, 1, Ticket);
                     }
                 },
                 Two: {
                     text: '2',
                     btnClass: 'btn-info btn-lg PrintBtnWidth',
                     keys: ['2'],
                     columnClass: 'col-md-3',
                     action: function () {
                         OpenPrinter(Type, OID, 2, Ticket);
                     }
                 },
                 Three: {
                     text: '3',
                     btnClass: 'btn-info btn-lg PrintBtnWidth',
                     columnClass: 'col-md-3',
                     keys: ['3'],
                     action: function () {
                         OpenPrinter(Type, OID, 3, Ticket);
                     }
                 },
             },
             onOpenBefore: function () {
                 $(".jconfirm-buttons").css('width', '100%');
             },
             onDestroy: function () {
                 $(".jconfirm-buttons").removeAttr('width');
             }
         });
     }
     function OpenPrinter(Type,OID, NoOfCpy,TicketNo) {
         window.location.href = "foodDo:" + Type + "&" + OID + "&" + NoOfCpy + "&" + TicketNo;
         return;
     }
     GetPrinterSetting();
     function GetPrinterSetting() {
         $.ajax({
             type: 'POST',
             url: "/CommonApi/OrgSettng",
             success: function (data) {
                 var Jobj = JSON.parse(data);
                 PrintInvoice = Jobj.InvoicePrint;
                 NoOfCopy = Jobj.InvoiceNoOfCopy;
                 OrderDisplay = Jobj.OrdDisaply;
                 KotPrintType = Jobj.KotPrint;
                 KotNoOfCopy = Jobj.NoOfCopy;
                 ParcelCharge =parseFloat(Jobj.ParcelAmt);
             },
             error: function (jqXhr, textStatus, errorMessage) { // error callback
                 $("#waiting").hide();
             }
         });
     }
     function AddChargeDiscnt(Type) {
         $("#waiting").show();
         $.ajax({
             type: 'GET',
             url: "/HG_Orders/DiscntCharges?SeatingId="+CurrentOrder+"&Type="+Type,
             success: function (data) {
                 makedpt("DiscntCharge", 400,400);
                 $("#DiscntCharge > .modal-dialog > .modal-content > .modal-body").html(data);
                 showdpt("DiscntCharge");
                 $("#waiting").hide();
             },
             error: function (jqXhr, textStatus, errorMessage) { // error callback
                 $("#waiting").hide();
             }
         });
     }
     function AddonInfo(ItmUUID, ItemId) {
         //$.ajax({
         //    type: 'POST',
         //    url: "/CommonApi/GetAddonsItems?UUID=" + ItmUUID,
         //    contentType: "application/json",
         //    success: function (data) {
         var HashAddinIds = [];
         var Cart=CartList.find(x => {
                return x.ItemUUID == ItmUUID;
         });
         for (var i = 0; i<Cart.itemAddons.AddonItemId.length; i++) {
             HashAddinIds.push(Cart.itemAddons.AddonItemId[i]);
         }
         console.log("addon info=" + HashAddinIds);
                 // HashAddinIds = JSON.parse(data);
                 var ObjItem = ItemList.find(x => {
                     return x.IID.toString() === ItemId
                 });
                 var addonlist = ObjItem.Addons;
                 var AddonItem = [];
                 for (var i = 0; i < addonlist.length; i++) {
                     AddonItem.push(...addonlist[i].AddOnItemList);
                 }
                 var onlySelectedAddons = AddonItem.filter(function (itm) {
                     return HashAddinIds.indexOf(itm.AddOnItemId.toString()) > -1;
                 });
                 var strhtml = "";
                 strhtml += "<div class='card'>";
                 strhtml += "<div class='card-header'> <h3 style='text-align:center'> Addon Items</h3></div>";
                 strhtml += '<div class="card-body col-md-12" id="Items" style="margin-top:10px;">'
                 for (var j = 0; j < onlySelectedAddons.length; j++) {
                     strhtml += '<div class="row" style="border:1px solid black;">';
                     //item 
                     strhtml += '<div class="col-md-6">';
                     // strhtml += '<label></label>';
                     strhtml += '<input type="text" readonly value="' + onlySelectedAddons[j].Title + '" class="form-control" />';
                     strhtml += '</div>';
                     //amt
                     strhtml += '<div class="col-md-6">';
                     //  strhtml += '  <label></label>';
                     strhtml += '<input type="text" id="Price' + onlySelectedAddons[j].AddOnItemId + '" readonly value="' + onlySelectedAddons[j].Price.toFixed(2) + '" class="form-control" />';
                     strhtml += '</div>';
                     strhtml += ' </div>';
                 }
                 strhtml += ' </div>';
                 strhtml += ' </div>';
                 makedpt("ShowAddedItem", 200, 300);
                 $("#ShowAddedItem > .modal-dialog > .modal-content > .modal-body").html(strhtml);
                 showdpt("ShowAddedItem");
            // },
         //    error: function (jqXhr, textStatus, errorMessage) { // error callback
         //        $("#waiting").hide();
         //    }
         //});
        
     }
    </script>
