@model HangOut.Models.POS.AddOnn
@using HtmlHelpers.BeginCollectionItem
@{
    Layout = null;

}
<div class="AddOnn">
    @using (Html.BeginCollectionItem("AddOnn"))
    {
        @Html.HiddenFor(model => model.TemplateName)
       
        <div class="row">
            <div class="col-md-4">

            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.TemplateName)
                @Html.EditorFor(model => model.TemplateName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.TemplateName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">

            </div>
            <div class="col-md-6">
                @Html.LabelFor(model => model.AddOnTitle)
                @Html.EditorFor(model => model.AddOnTitle, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.AddOnTitle, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Min)
                @Html.EditorFor(model => model.Min, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Min, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Max)
                @Html.EditorFor(model => model.Max, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Max, "", new { @class = "text-danger" })
            </div>
            <div class="row">
                @foreach (var Item in Model.AddOnItems)
                {
                    @Html.Partial("AddOnItems", Item)
                }
            </div>
            </div>
    }
        </div>
