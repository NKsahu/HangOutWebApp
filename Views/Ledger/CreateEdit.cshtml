@model HangOut.Models.Account.Ledger
@using HangOut.Models.Common
@using HangOut.Models.Account;
@{ List<State> listcity = new State().GetAll();}
@{
    Layout = null;
    var ObjOrg = Request.Cookies["UserInfo"];
}

@using HangOut.Models
<div class="card">
    <div class="card-header">
        <h3 style="text-align:center;color:#000000"><b>Account Ledger</b></h3>
        <hr />
    </div>
    <div class="card-body">

        @using (Ajax.BeginForm("CreateEdit", "Ledger", new { ID = Model.ID }, new AjaxOptions { HttpMethod = "POST", LoadingElementId = "waiting", OnSuccess = "OnSuccess" }))
        {
            @Html.HiddenFor(model => model.ID)


        <div class="row">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })

            <div class="col-md-4">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label  " })

                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.ShortName, htmlAttributes: new { @class = "control-label  " })

                @Html.EditorFor(model => model.ShortName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortName, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.MobileNo1, htmlAttributes: new { @class = "control-label  " })

                @Html.EditorFor(model => model.MobileNo1, new { htmlAttributes = new { @class = "form-control OnlyNum", required = "required" } })
                @Html.ValidationMessageFor(model => model.MobileNo1, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.MobileNo2, htmlAttributes: new { @class = "control-label  " })

                @Html.EditorFor(model => model.MobileNo2, new { htmlAttributes = new { @class = "form-control OnlyNum" } })
                @Html.ValidationMessageFor(model => model.MobileNo2, "", new { @class = "text-danger" })

            </div>
            @{
                <div class="col-md-4">
                    @Html.Label("DebtorType")
                    @Html.DropDownListFor(model => model.DebtorType, new SelectList(Ledger.DTypes(), "ID", "Name", Model.ID), "Select Debtor Type", new { @class = "form-control", required = "required", Id = "did" })
                    @Html.ValidationMessageFor(model => model.DebtorType, "", new { @class = "text-danger" })

                </div>
            }
            @if (ObjOrg["OrgId"] == "0" || ObjOrg["OrgId"] == null)
            {
                <div class="col-md-4" id="Oid">
                    @Html.Label("Organization")
                    @{

                        SelectList sl = new SelectList(new HG_OrganizationDetails().GetAll(), "OrgID ", "Name");
                    }

                    @Html.DropDownListFor(Model => Model.OrgId, sl, "Select Orgonization", new { @class = "form-control"})
                    @Html.ValidationMessageFor(model => model.OrgId, "", new { @class = "text-danger" })

                </div>
            }
            else
            {
                @Html.HiddenFor(model => model.OrgId)
            }
            <div class=" col-md-4">
                @Html.Label("State")
                @Html.DropDownListFor(model => model.State, new SelectList(new State().GetAll(), "StateId", "Name"), "Select States", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.MarginOnCash, htmlAttributes: new { @class = "control-label  " })

                @Html.EditorFor(model => model.MarginOnCash, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MarginOnCash, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.TaxOnAboveMargin, htmlAttributes: new { @class = "control-label  " })

                @Html.EditorFor(model => model.TaxOnAboveMargin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TaxOnAboveMargin, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.MarginOnline, htmlAttributes: new { @class = "control-label  " })

                @Html.EditorFor(model => model.MarginOnline, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MarginOnline, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.TaxOnAboveMarginOnline, htmlAttributes: new { @class = "control-label  " })

                @Html.EditorFor(model => model.TaxOnAboveMarginOnline, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TaxOnAboveMarginOnline, "", new { @class = "text-danger" })

            </div>
            @{
                <div class="col-md-4">
                    @Html.Label("PaymentFrequency")
                    @Html.DropDownListFor(model => model.PaymentFrequency, new SelectList(Ledger.PFrequency(), "ID", "Name", Model.ID), "Select", new { @class = "form-control", id = "pid" })
                    @Html.ValidationMessageFor(model => model.PaymentFrequency, "", new { @class = "text-danger" })

                </div>
            }
            @{



                <div class="col-md-4" id="wid">
                    @Html.Label("PaymentDay")
                    @Html.DropDownListFor(model => model.PaymentDay, new SelectList(Ledger.WeekDays(), "ID", "Name", Model.ID), "Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PaymentDay, "", new { @class = "text-danger" })

                </div>


            }
            @{
                <div class="col-md-4">
                    @Html.Label("CollectionFrequency")
                    @Html.DropDownListFor(model => model.CollectionFrequency, new SelectList(Ledger.CFrequency(), "ID", "Name", Model.ID), "Select", new { @class = "form-control", id = "cid" })
                    @Html.ValidationMessageFor(model => model.CollectionFrequency, "", new { @class = "text-danger" })

                </div>
            }
            @{



                <div class="col-md-4" id="cwid">
                    @Html.Label("CollectionDay")
                    @Html.DropDownListFor(model => model.CollectionDay, new SelectList(Ledger.CWeekDays(), "ID", "Name", Model.ID), "Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CollectionDay, "", new { @class = "text-danger" })

                </div>


            }
            <div class="col-md-4" id="myModal">
                @Html.Label("CalculationStartFrom")
                @Html.TextBoxFor(model => model.CalculationStartFrom, DateTime.Now.Date.ToString("dd-MM-yyyy"), new { @class = "form-control DateField" })
            </div>
            @{



                <div class="col-md-4">
                    @Html.Label("TDS Applicable")
                    @Html.DropDownListFor(model => model.TDSApplicable, new SelectList(Ledger.TDS(), "ID", "Name", Model.ID), "Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TDSApplicable, "", new { @class = "text-danger" })

                </div>


            }
            <div class="col-md-4">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label  " })

                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label  " })

                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-1">
                @Html.Label("Save", new { @class = "text-white" })
                <input style="margin-top:25px" type="submit" value="Save" class="btn btn-success" />

            </div>
        </div>
        }
    </div>

</div>
<script>
    setTimeout(function () { $(window).trigger('resize'); }, 100);
    $(".DateField").datepicker();
    $("#wid").hide();
    $("#cwid").hide();
    $(document).on('change', function () {
        $("#Oid").show();
        var values = $("#did").val();
        if (values === "1") {
            $("#Oid").hide();
        }
    });
    $(document).on('change', function () {
        $("#wid").hide();
        var values = $("#pid").val();
        if (values === "1") {
            $("#wid").show();
        }
    });
    $(document).on('change', function () {
        $("#cwid").hide();
        var values = $("#cid").val();
        if (values === "1") {
            $("#cwid").show();
        }
    });
    $('#myModal').on('shown.bs.modal', function () {
        $('.input-group.date').datepicker({
            format: "dd/mm/yyyy",
            startDate: "01-01-2015",
            endDate: "01-01-2020",
            todayBtn: "linked",
            autoclose: true,
            todayHighlight: true,
            container: '#myModal modal-body'
        });
    });
</script>


