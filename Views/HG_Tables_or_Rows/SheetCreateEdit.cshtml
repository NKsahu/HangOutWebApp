@model HangOut.Models.HG_Tables_or_Rows
@using HangOut.Models.DynamicList
@{
    Layout = null;
}
@using HangOut.Models
@{List<HG_OrganizationDetails> listorgonization = new HG_OrganizationDetails().GetAll(); }
@{ List<HG_Floor_or_ScreenMaster> listFloorScreen = new HG_Floor_or_ScreenMaster().GetAll();}
@{ List<HG_FloorSide_or_RowName> listfloorside = new HG_FloorSide_or_RowName().GetAll(); }
<div class="card">
    <div class="card-header">
        <h4 style="text-align:center;color:#000000"><b> ADD SHEETS </b></h4>
        <hr />
    </div>
    <div class="card-body">
        @using (Ajax.BeginForm("SheetCreateEdit", "HG_Tables_or_Rows", new { Table_or_RowID = Model.Table_or_RowID }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "DynamicData", LoadingElementId = "waiting", OnSuccess = "OnSuccess" }))
        {
            @Html.HiddenFor(model => model.Table_or_RowID)
            <div class="row">


                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="col-sm-4">
                    @Html.Label("Orgonization Name")
                    @Html.DropDownListFor(model => model.OrgId, new SelectList(new HG_OrganizationDetails().GetAll(), "OrgID", "Name", Model.OrgId), "Select Organization Name", new { @class = "form-control", required = "required" })

                    @Html.ValidationMessageFor(model => model.OrgId, "", new { @class = "text-danger" })

                </div>

                <div class="col-sm-4">
                    @Html.Label("Sheet Number")
                    @Html.EditorFor(model => model.Table_or_RowName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Table_or_RowName, "", new { @class = "text-danger" })

                </div>

                <div class="col-sm-4">
                    @Html.Label("Screen Number")

                    @Html.DropDownListFor(model => model.Floor_or_ScreenId, new SelectList(new HG_Floor_or_ScreenMaster().GetAll(), "Floor_or_ScreenID", "Name", Model.Floor_or_ScreenId), "Select Screen and Floor Name", new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.Floor_or_ScreenId, "", new { @class = "text-danger" })

                </div>

                <div class="col-sm-4">
                    @Html.Label("Row Number")

                    @Html.DropDownListFor(model => model.FloorSide_or_RowNoID, new SelectList(new HG_FloorSide_or_RowName().GetAll(), " ID", "FloorSide_or_RowName", Model.FloorSide_or_RowNoID), "Select Screen and Floor Name", new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.FloorSide_or_RowNoID, "", new { @class = "text-danger" })

                </div>

                <div class="col-sm-4">

                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label  " })

                    @Html.DropDownListFor(model => model.Type, new SelectList(OrgType.List, "id", "Name","2"), new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })

                </div>




                <div class=" col-sm-1">
                    @Html.Label("Save", new { @class = "text-white" })
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>

            </div>
        }

    </div>
    <script>
        $(document).ready(function () {
            Cal();
            function Cal() {
                $("#Type").parent('div').hide();
            }

        });
        </script>
