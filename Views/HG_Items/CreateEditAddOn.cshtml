@model HangOut.Models.POS.AddOns
@{
    Layout = null;
    var CurrentOrg = Request.Cookies["UserInfo"];
}

<div class="card">
    <div class="card-header">
        <h3 style="text-align:center;color:#000000"><b>ADDON</b></h3>
        <hr />
    </div>
    <div class="card-body">
        @using (Ajax.BeginForm("CreateEditAddOn", "HG_Items", new AjaxOptions { HttpMethod = "POST", LoadingElementId = "waiting", OnSuccess = "" }))
        {
      @Html.HiddenFor(model=>model.AddOnCategoryId)
                foreach (var AddOn in Model.AddonnList)
                {
                @Html.Partial("AddOnn", AddOn)
                }
            <div id="AddNewAddon">

        </div>
                <div class="col-sm-1" style="float:right">
                    @Html.Label("Save", new { @class = "text-white " })
                    <input type="button" onclick="SaveAdon()" value="Save" class="btn btn-success " />
                </div>
                }
            </div>
        </div>

<script>
    var AddItemEvent = null;
    function NewAddOn(event) {
        $('#waiting').show();
        $.ajax({
            type: 'GET',
            url: "/HG_Items/NewAddon",
            success: function (data) {
                $("#AddNewAddon").append(data);
                $(event).parent('span').parent('div').hide();
                $('#waiting').hide();
            },
            error: function (jqXhr, textStatus, errorMessage) { // error callback
                $('#waiting').hide();
            }
        });
    }
    function RemoveAddon(event) {
        $(event).parent('div').parent('div').parent('div').find('.DeletedStatus').val(1);
        $(event).parent('div').parent('div').parent('div').hide();
    }
    function ShowItemlist(event) {
        AddItemEvent = event;
        $("#waiting").show();
        $.ajax({
            type: 'GET',
            url: "/HG_Items/AddItemToOrder",
            success: function (data) {
                makedpt("ShowItems", 600, 600);
                $("#ShowItems > .modal-dialog > .modal-content > .modal-body").html(data);
                showdpt("ShowItems");
                $("#waiting").hide();
            },
            error: function (jqXhr, textStatus, errorMessage) { // error callback
                $("#waiting").hide();
            }
        });
    }

    function AddItem(event, ItemId) {
        $.ajax({
            type: 'GET',
            url: "/HG_Items/NewAddOnItem?ItemId="+ItemId,
            success: function (data) {
                $(AddItemEvent).parent('div').parent('div').find('#Items').append(data);
            },
            error: function (jqXhr, textStatus, errorMessage) { // error callback
                $("#waiting").hide();
            }
        });
    }
    function RemoveItem(event) {
        $(event).parent('div').parent('div').parent('div').find('.DelStatus').val(1);
        $(event).parent('div').parent('div').parent('div').hide();
    }
    function JsonSuccess(Jobj) {
        $("#waiting").hide();
        hidedpt("AddOnIndex");
    }

    function SaveAdon() {
        var Addons = {};
        Addons.AddOnCategoryId = $("#AddOnCategoryId").val();
        Addons.AddonnList = [];
        var ListAddOnnCls = document.getElementsByClassName("AddOnnCls");
        for (var i = 0; i < ListAddOnnCls.length; i++) {
            var AddonObj = {};
            var ObjAddJQ = $(ListAddOnnCls[i]);
            console.log(" " + ObjAddJQ);
            AddonObj.TitleId = ObjAddJQ.find(".TitleId").val();
            AddonObj.AddOnTitle = ObjAddJQ.find(".AddOnTitle").val();
            AddonObj.Min = ObjAddJQ.find(".Min").val();
            AddonObj.Max = ObjAddJQ.find(".Max").val();
            AddonObj.AddonCatId = ObjAddJQ.find(".AddonCatId").val();
            AddonObj.DeletedStatus = ObjAddJQ.find(".DeletedStatus").val();
            AddonObj.AddOnItemList = [];
            var AddOnItems = ListAddOnnCls[i].getElementsByClassName("AddOnItems");
            for (var j = 0; j < AddOnItems.length; j++) {
                var ObjAddOnItem = $(AddOnItems[j]);
                console.log("Items");
                var AddonItemObj = {};
                AddonItemObj.AddOnItemId = ObjAddOnItem.find(".AddOnItemId").val();
                AddonItemObj.ItemId = ObjAddOnItem.find(".ItemId").val();
                AddonItemObj.CostPrice = ObjAddOnItem.find(".CostPrice").val();
                AddonItemObj.Tax = ObjAddOnItem.find(".Tax").val();
                AddonItemObj.Price = ObjAddOnItem.find(".Price").val();
                AddonItemObj.AddonID = ObjAddOnItem.find(".AddonID").val();
                AddonItemObj.DelStatus = ObjAddOnItem.find(".DelStatus").val();
                AddonObj.AddOnItemList.push(AddonItemObj);
            }
            Addons.AddonnList.push(AddonObj);
        }
            
            $('#waiting').show();
            $.ajax({
                type: 'POST',
                url: "/HG_Items/CreateEditAddOn",
                data: JSON.stringify(Addons),
                contentType: "application/json",
                success: function (data) {
                   
                    hidedpt("AddOnIndex");
                    $('#waiting').hide();
                },
                error: function (jqXhr, textStatus, errorMessage) { // error callback
                    $('#waiting').hide();
                }
            });
        
    }
</script>
