@model HangOut.Models.HG_Items
    @using HangOut.Models
@{
    Layout = null;
}
<div class="card">
    <div class="card-header">
        <h4 style="text-align:center;color:#000000"><b>USER ITEM</b></h4>
        <hr />
    </div>
    <div class="card-body">


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ItemID)
            <div class="row">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.ValidationMessageFor(model => model.ItemID, "", new { @class = "text-danger" })


                <div class="col-sm-4">
                    @Html.Label("Category Name")
                    @Html.DropDownListFor(model => model.CategoryID, new SelectList(new HG_Category().GetAll(), "CategoryID", "Category", Model.CategoryID), "Select Category", new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })

                </div>

                <div class="col-sm-4">
                    @Html.Label("Organization ID")

                    @Html.DropDownListFor(model => model.OrgID, new SelectList(new HG_OrganizationDetails().GetAll(), "OrgID", "Name", Model.OrgID), "Select Organization Name", new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.OrgID, "", new { @class = "text-danger" })

                </div>

                <div class="col-sm-4">
                    @Html.LabelFor(model => model.Items, htmlAttributes: new { @class = "control-label  " })

                    @Html.EditorFor(model => model.Items, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Items, "", new { @class = "text-danger" })

                </div>

                <div class="col-sm-4">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label  " })

                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })

                </div>

                <div class="col-sm-4">
                    @Html.LabelFor(model => model.Plates, htmlAttributes: new { @class = "control-label  " })

                    @Html.EditorFor(model => model.Plates, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Plates, "", new { @class = "text-danger" })

                </div>

                <div class="col-sm-4">
                    @Html.LabelFor(model => model.ItemMode, htmlAttributes: new { @class = "control-label  " })

                    @Html.EditorFor(model => model.ItemMode, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.ItemMode, "", new { @class = "text-danger" })

                </div>

                <div class="col-sm-4">
                    @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label  " })

                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })

                </div>

                <div class="col-sm-4">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label  " })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Status)

                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger", required = "required" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-1">
                    @Html.Label("Save", new { @class = "text-white" })
                    <input type="submit" value="Save" class="btn btn-success" />

                </div>
            </div>
        }
    </div>
</div>

