@model HangOut.Models.HG_OrganizationDetails
@using HangOut.Models.DynamicList;
@{
    Layout = null;
}
@using HangOut.Models.Common
@{List<City> listcity = new List<City>(); }
@{List<State> liststate = new List<State>();}
<div class="card">
    <div class="card-header">
        <h4 style="text-align:center;color:#000000"><b>ORGONIZATION</b></h4>
        <hr />
    </div>
    <div class="card-body">

        @using (Ajax.BeginForm("CreateEdit", "HG_OrganizationDetails", new { OrgID = Model.OrgID }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "DynamicData", LoadingElementId = "waiting", OnSuccess = "OnSuccess" }))
        {

            @Html.HiddenFor(model => model.OrgID)
            @Html.HiddenFor(model => model.DOE);
            @Html.HiddenFor(model => model.EntryDate);
            @Html.HiddenFor(model => model.IvoiceHeading)
            @Html.HiddenFor(model => model.Address)
            @Html.HiddenFor(model => model.Logo)
            @Html.HiddenFor(model => model.Cell)
            @Html.HiddenFor(model => model.WebSite)
            @Html.HiddenFor(model => model.GSTNO)
            @Html.HiddenFor(model => model.AcType)
            <div class="row">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="col-sm-4">
                    @Html.LabelFor(model => model.OrgTypes, htmlAttributes: new { @class = "control-label  " })
                    @Html.DropDownListFor(model => model.OrgTypes, new SelectList(OrgType.List, "id", "Name"), new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.OrgTypes, "", new { @class = "text-danger" })
                </div>

                <div class="col-sm-4">
                    @{
                        List<SelectListItem> sl = new List<SelectListItem>();
                        SelectListItem slobj = new SelectListItem();
                        slobj.Value = "1";
                        slobj.Text = "Prepaid";
                        SelectListItem slobj2 = new SelectListItem();
                        slobj2.Value = "2";
                        slobj2.Text = "PostPaid";
                        sl.Add(slobj);
                        sl.Add(slobj2);

                    }
                    @Html.LabelFor(model => model.PaymentType, htmlAttributes: new { @class = "control-label  " })
                    @Html.DropDownListFor(model => model.PaymentType, sl, new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.PaymentType, "", new { @class = "text-danger" })
                </div>

                <div class="col-sm-4">
                    @Html.LabelFor(model => model.HeadName, htmlAttributes: new { @class = "control-label  " })

                    @Html.EditorFor(model => model.HeadName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.HeadName, "", new { @class = "text-danger" })

                </div>

                <div class="col-sm-4">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label  " })

                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                </div>

                <div class="col-sm-4">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label  " })

                    @Html.DropDownListFor(model => model.State, new SelectList(new State().GetAll(), "StateId", "Name", Model.State), "Select State", new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })

                </div>
                <div class="col-sm-4">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label  " })

                    @Html.DropDownListFor(model => model.City, new SelectList(listcity, "CityId", "Name", Model.City), new { @class = "form-control", val = Model.City })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })

                </div>
                <div class="col-sm-4">
                    @Html.LabelFor(model => model.PinCode, htmlAttributes: new { @class = "control-label  " })

                    @Html.EditorFor(model => model.PinCode, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.PinCode, "", new { @class = "text-danger" })

                </div>

                <div class="col-sm-4">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label  " })
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })

                </div>



                <div class="col-sm-4">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label  " })

                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                </div>
                <div class="col-sm-4">
                    @Html.LabelFor(model => model.PANNO, htmlAttributes: new { @class = "control-label  " })
                    @Html.EditorFor(model => model.PANNO, new { htmlAttributes = new { @class = "form-control",  } })
                    @Html.ValidationMessageFor(model => model.PANNO, "", new { @class = "text-danger" })

                </div>

                <div class="col-sm-4">
                    @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label  " })
                    @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })

                </div>

                <div class="col-sm-12">
                    @Html.LabelFor(model => model.ACNO, htmlAttributes: new { @class = "control-label  " })
                    @Html.EditorFor(model => model.ACNO, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ACNO, "", new { @class = "text-danger" })

                </div>


                <div class="col-sm-4">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label  " })

                    <div class="checkbox">
                        @Html.EditorFor(model => model.Status)
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>

                </div>

                <div class="col-sm-1">
                    @Html.Label("Save", new { @class = "text-white" })
                    <input type="submit" value="Save" class="btn btn-success" />

                </div>
            </div>
        }
    </div>
</div>

<script>
    $(document).ready(function () {
        GetDrowpDownCity();
        $("#State").change(function () {

            GetDrowpDownCity();

        });
      
        function GetDrowpDownCity() {
            var StateId = $("#State").val();
            var CityValue = $("#City").attr("val");
            console.log("City Value  " + CityValue);
            $("#waiting").show();
            $.ajax({
                url: "/WebApi/CityListByStateId?StateId="+StateId,
                type: "POST",
                success: function (data) {
                    var JsonArray = JSON.parse(data);
                    $("#City").val('0');
                    $('<option>',{value: "0",text: "Select"}).html("Select").appendTo("#City");
                    if (JsonArray.length > 0) {
                        $.each(JsonArray, function (i, Obj) {      // bind the dropdown list using json result              
                            $('<option>',
                                {
                                    value: Obj.CityId,
                                    text: Obj.Name
                                    
                                }).html(Obj.Name).appendTo("#City");
                        });
                        $("#City").val(CityValue);
                    }
                    $("#waiting").hide();
                },
                error: function (Xr, Status, ErrorMsg) {
                    $("#City").val('0');
                    $('<option>', { value: "0", text: "Select" }).html("Select").appendTo("#City");
                    $("#waiting").hide();
                }
            });
        }
        
    });
   



</script>
