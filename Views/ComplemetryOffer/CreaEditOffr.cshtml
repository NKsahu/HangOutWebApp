@model HangOut.Models.MyCustomer.Cashback
@using HangOut.Models.Common
@{
    Layout = null;
}
@{
    Settings setting = new Settings().GetOne("CBCHARGE");
    double ChargeAmt = 0.00;
    if (setting.SettingId > 0)
    {
        ChargeAmt = double.Parse(setting.KeyValue);
    }
}
<div class="card">
    <div class="card-header">
        <h3 style="text-align:center;color:#000000"><b>Comlementry Dish</b></h3>
        <hr />
    </div>
    <div class="card-body">
        @using (Ajax.BeginForm("PostCasbBack", "CashBack", new AjaxOptions { HttpMethod = "POST", LoadingElementId = "waiting", OnSuccess = "OnSuccess" }))
        {
            @Html.HiddenFor(model => model.CashBkId)
            @Html.HiddenFor(model => model.OrgID)
            @Html.HiddenFor(model => model.CashBkStatus)
            @Html.HiddenFor(model => model.SeatingIds)
            @Html.HiddenFor(model => model.TerminateSts)
            @Html.HiddenFor(model => model.CBUniqId)
            @Html.HiddenFor(model => model.CashBkType)
            @Html.HiddenFor(model => model.Percentage)
            @Html.HiddenFor(model => model.StartDate)
            @Html.HiddenFor(model => model.ValidTill)
            @Html.HiddenFor(model => model.ValidTillDate)
            @Html.HiddenFor(model => model.MaxAmt)
            @Html.HiddenFor(model => model.RaiseDynamic)
            @Html.HiddenFor(model => model.CampeignType)
            @Html.HiddenFor(model => model.MaxCBLimit)
            @Html.HiddenFor(model => model.BilAmt)
            List<SelectListItem> OfferType = new List<SelectListItem>() {
        new SelectListItem{Text="Choice Based",Value="1"},new SelectListItem{Text="Fixed Item",Value="2"}
        };
        <div class="row">
            <div class="col-md-2">
                @Html.Label("Start From")
                @Html.TextBoxFor(model => model.StrStartDate, Model.StrStartDate, new { @class = "form-control datefield" })
                @Html.ValidationMessageFor(model => model.StrStartDate, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-2">
                @Html.Label("End Date")
                @Html.TextBoxFor(model => model.ValidTillStr, Model.ValidTillStr, new { @class = "form-control datefield" })
                @Html.ValidationMessageFor(model => model.ValidTillStr, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.Label("Offer Mode")
                @Html.DropDownListFor(model => model.OfferType, OfferType, new { @class = "form-control " })
                @Html.ValidationMessageFor(model => model.OfferType, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-1" style="margin-top:5px;">
                @Html.Label("Save", new { @class = "text-white" })
                <input type="submit" value="Next" class="btn btn-success" />
            </div>
        </div>
}
    </div>
    <div class="card-footer">
        <div class="col-md-12">
            <h5 style="text-align:center;color:forestgreen">Per Unit Pricing @ChargeAmt.ToString("0.00")</h5>
        </div>
        <div class="col-md-12" style="margin-top:50px;">
            <h5 style="color:blueviolet">
                TIP: Keep the campaign running for longer time .it will allow Algorithm to train itself and improve each day
                RECOMMENDED TIME : 2 MONTHS
            </h5>
        </div>
        <div class="col-md-12">
            <h5 style="color:blueviolet">NOTE: customer will be able to use this offer on their NEXT VISIT</h5>
        </div>
    </div>
</div>


<script>
    OfferType();
    function OfferType() {
        if ($("#CashBkId").val() != "0") {
            $('#OfferType').css('pointer-events','none');
        }
        
    }
</script>